From 1fa9d714c6e468b3943935b6cd4a485f326f35b0 Mon Sep 17 00:00:00 2001
From: Alcatraz323 <alcatraz32323@gmail.com>
Date: Thu, 7 Oct 2021 20:39:36 +0800
Subject: [PATCH 01/24] aura: RazerParts: Initial bringup

---
 RazerParts/Android.mk                         |  50 +++
 RazerParts/AndroidManifest.xml                |  64 +++
 .../privapp-permissions_com.razer.parts.xml   |  21 +
 .../res/drawable-night/cellphone_cog.xml      |   8 +
 .../res/drawable-night/ic_razer_logo.xml      |   4 +
 RazerParts/res/drawable/book_open.xml         |   8 +
 RazerParts/res/drawable/brightness_7.xml      |   8 +
 RazerParts/res/drawable/cellphone_cog.xml     |   8 +
 .../res/drawable/cellphone_screenshot.xml     |   8 +
 RazerParts/res/drawable/dolby.xml             |   8 +
 RazerParts/res/drawable/flash.xml             |   8 +
 RazerParts/res/drawable/format_color_fill.xml |   8 +
 RazerParts/res/drawable/ic_razer_logo.xml     |   4 +
 RazerParts/res/drawable/led_on.xml            |   8 +
 RazerParts/res/drawable/overscan.xml          |   8 +
 RazerParts/res/drawable/power.xml             |   8 +
 RazerParts/res/values-zh-rCN/arrays.xml       |  10 +
 RazerParts/res/values-zh-rCN/strings.xml      |  27 ++
 RazerParts/res/values/arrays.xml              |  35 ++
 RazerParts/res/values/colors.xml              |   4 +
 RazerParts/res/values/strings.xml             |  40 ++
 RazerParts/res/values/styles.xml              |  24 ++
 RazerParts/res/xml/chroma_settings.xml        |  57 +++
 RazerParts/res/xml/device_settings.xml        |  70 ++++
 .../src/com/razer/parts/BootReceiver.java     |  79 ++++
 .../src/com/razer/parts/ChromaActivity.java   |  46 +++
 .../src/com/razer/parts/ChromaFragment.java   | 119 ++++++
 .../src/com/razer/parts/ChromaManager.java    | 365 ++++++++++++++++++
 RazerParts/src/com/razer/parts/Constants.java |  32 ++
 .../razer/parts/DeviceSettingsActivity.java   |  46 +++
 .../razer/parts/DeviceSettingsFragment.java   | 166 ++++++++
 .../com/razer/parts/SharedPreferenceUtil.java |  61 +++
 .../src/com/razer/parts/ShellUtils.java       | 148 +++++++
 device.mk                                     |   3 +-
 .../base/core/res/res/values/config.xml       |   3 +
 sepolicy/vendor/system_app.te                 |   4 +
 36 files changed, 1569 insertions(+), 1 deletion(-)
 create mode 100755 RazerParts/Android.mk
 create mode 100755 RazerParts/AndroidManifest.xml
 create mode 100755 RazerParts/privapp-permissions_com.razer.parts.xml
 create mode 100644 RazerParts/res/drawable-night/cellphone_cog.xml
 create mode 100755 RazerParts/res/drawable-night/ic_razer_logo.xml
 create mode 100644 RazerParts/res/drawable/book_open.xml
 create mode 100644 RazerParts/res/drawable/brightness_7.xml
 create mode 100644 RazerParts/res/drawable/cellphone_cog.xml
 create mode 100755 RazerParts/res/drawable/cellphone_screenshot.xml
 create mode 100755 RazerParts/res/drawable/dolby.xml
 create mode 100755 RazerParts/res/drawable/flash.xml
 create mode 100644 RazerParts/res/drawable/format_color_fill.xml
 create mode 100755 RazerParts/res/drawable/ic_razer_logo.xml
 create mode 100755 RazerParts/res/drawable/led_on.xml
 create mode 100755 RazerParts/res/drawable/overscan.xml
 create mode 100644 RazerParts/res/drawable/power.xml
 create mode 100755 RazerParts/res/values-zh-rCN/arrays.xml
 create mode 100755 RazerParts/res/values-zh-rCN/strings.xml
 create mode 100755 RazerParts/res/values/arrays.xml
 create mode 100755 RazerParts/res/values/colors.xml
 create mode 100755 RazerParts/res/values/strings.xml
 create mode 100755 RazerParts/res/values/styles.xml
 create mode 100755 RazerParts/res/xml/chroma_settings.xml
 create mode 100755 RazerParts/res/xml/device_settings.xml
 create mode 100755 RazerParts/src/com/razer/parts/BootReceiver.java
 create mode 100755 RazerParts/src/com/razer/parts/ChromaActivity.java
 create mode 100755 RazerParts/src/com/razer/parts/ChromaFragment.java
 create mode 100755 RazerParts/src/com/razer/parts/ChromaManager.java
 create mode 100755 RazerParts/src/com/razer/parts/Constants.java
 create mode 100755 RazerParts/src/com/razer/parts/DeviceSettingsActivity.java
 create mode 100755 RazerParts/src/com/razer/parts/DeviceSettingsFragment.java
 create mode 100644 RazerParts/src/com/razer/parts/SharedPreferenceUtil.java
 create mode 100755 RazerParts/src/com/razer/parts/ShellUtils.java
 create mode 100644 sepolicy/vendor/system_app.te

diff --git a/RazerParts/Android.mk b/RazerParts/Android.mk
new file mode 100755
index 0000000..2dd6ead
--- /dev/null
+++ b/RazerParts/Android.mk
@@ -0,0 +1,50 @@
+#
+# Copyright (c) 2020, Shashank Verma (shank03) <shashank.verma2002@gmail.com>
+#
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to deal
+# in the Software without restriction, including without limitation the rights
+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+# copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included in all
+# copies or substantial portions of the Software.
+#
+
+LOCAL_PATH := $(call my-dir)
+
+include $(CLEAR_VARS)
+
+LOCAL_MODULE_TAGS := optional
+
+LOCAL_SRC_FILES := $(call all-java-files-under, src)
+
+LOCAL_PACKAGE_NAME := RazerParts
+LOCAL_CERTIFICATE := platform
+LOCAL_PRIVATE_PLATFORM_APIS := true
+LOCAL_PRIVILEGED_MODULE := true
+
+LOCAL_USE_AAPT2 := true
+
+LOCAL_STATIC_ANDROID_LIBRARIES := \
+    androidx.core_core \
+    androidx.preference_preference \
+    androidx.appcompat_appcompat \
+    SettingsLib
+
+LOCAL_RESOURCE_DIR := \
+    $(LOCAL_PATH)/res \
+    packages/resources/devicesettings/res
+
+LOCAL_REQUIRED_MODULES := privapp-permissions_com.razer.parts.xml
+
+include $(BUILD_PACKAGE)
+
+include $(CLEAR_VARS)
+LOCAL_MODULE := privapp-permissions_com.razer.parts.xml
+LOCAL_MODULE_CLASS := ETC
+LOCAL_MODULE_TAGS := optional
+LOCAL_MODULE_PATH := $(TARGET_OUT_ETC)/permissions
+LOCAL_SRC_FILES := $(LOCAL_MODULE)
+include $(BUILD_PREBUILT)
diff --git a/RazerParts/AndroidManifest.xml b/RazerParts/AndroidManifest.xml
new file mode 100755
index 0000000..4042744
--- /dev/null
+++ b/RazerParts/AndroidManifest.xml
@@ -0,0 +1,64 @@
+<!--
+  ~ Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+  ~
+  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
+  ~ of this software and associated documentation files (the "Software"), to deal
+  ~ in the Software without restriction, including without limitation the rights
+  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  ~ copies of the Software, and to permit persons to whom the Software is
+  ~ furnished to do so, subject to the following conditions:
+  ~
+  ~ The above copyright notice and this permission notice shall be included in all
+  ~ copies or substantial portions of the Software.
+  -->
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    coreApp="true"
+    package="com.razer.parts"
+    android:sharedUserId="android.uid.system"
+    android:versionCode="1"
+    android:versionName="1.0">
+
+    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
+    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
+    <uses-permission android:name="android.permission.WRITE_SECURE_SETTINGS" />
+
+    <application
+        android:directBootAware="true"
+        android:label="@string/app_name"
+        android:theme="@style/DeviceSettingsTheme">
+
+        <activity
+                android:name=".DeviceSettingsActivity"
+                android:label="@string/device_settings_title"
+                android:icon="@drawable/cellphone_cog"
+                android:exported="false"
+                android:launchMode="singleTask">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <action android:name="com.android.settings.action.EXTRA_SETTINGS" />
+            </intent-filter>
+            <meta-data android:name="com.android.settings.dismiss"
+                       android:value="9,13,30" />
+            <meta-data android:name="com.android.settings.bg.hint"
+                       android:resource="@color/device_settings_hp_bg" />
+            <meta-data android:name="com.android.settings.category"
+                       android:value="com.android.settings.category.ia.homepage" />
+            <meta-data android:name="com.android.settings.summary"
+                       android:resource="@string/device_settings_summary" />
+        </activity>
+
+        <activity
+            android:name=".ChromaActivity"
+            android:label="@string/pref_chroma" />
+
+        <receiver android:name="com.razer.parts.BootReceiver">
+            <intent-filter android:priority="999">
+                <action android:name="android.intent.action.BOOT_COMPLETED" />
+                <action android:name="android.intent.action.QUICKBOOT_POWERON" />
+            </intent-filter>
+        </receiver>
+
+    </application>
+
+</manifest>
diff --git a/RazerParts/privapp-permissions_com.razer.parts.xml b/RazerParts/privapp-permissions_com.razer.parts.xml
new file mode 100755
index 0000000..95eeeed
--- /dev/null
+++ b/RazerParts/privapp-permissions_com.razer.parts.xml
@@ -0,0 +1,21 @@
+<!--
+  ~ Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+  ~
+  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
+  ~ of this software and associated documentation files (the "Software"), to deal
+  ~ in the Software without restriction, including without limitation the rights
+  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  ~ copies of the Software, and to permit persons to whom the Software is
+  ~ furnished to do so, subject to the following conditions:
+  ~
+  ~ The above copyright notice and this permission notice shall be included in all
+  ~ copies or substantial portions of the Software.
+  -->
+
+<permissions>
+    <privapp-permissions package="com.razer.parts">
+        <permission name="android.permission.RECEIVE_BOOT_COMPLETED" />
+        <permission name="android.permission.WRITE_SETTINGS" />
+        <permission name="android.permission.WRITE_SECURE_SETTINGS" />
+    </privapp-permissions>
+</permissions>
diff --git a/RazerParts/res/drawable-night/cellphone_cog.xml b/RazerParts/res/drawable-night/cellphone_cog.xml
new file mode 100644
index 0000000..27ed9fd
--- /dev/null
+++ b/RazerParts/res/drawable-night/cellphone_cog.xml
@@ -0,0 +1,8 @@
+<!-- drawable/cellphone_cog.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#000" android:pathData="M9.82,12.5C9.84,12.33 9.86,12.17 9.86,12C9.86,11.83 9.84,11.67 9.82,11.5L10.9,10.69C11,10.62 11,10.5 10.96,10.37L9.93,8.64C9.87,8.53 9.73,8.5 9.62,8.53L8.34,9.03C8.07,8.83 7.78,8.67 7.47,8.54L7.27,7.21C7.27,7.09 7.16,7 7.03,7H5C4.85,7 4.74,7.09 4.72,7.21L4.5,8.53C4.21,8.65 3.92,8.83 3.65,9L2.37,8.5C2.25,8.47 2.12,8.5 2.06,8.63L1.03,10.36C0.97,10.5 1,10.61 1.1,10.69L2.18,11.5C2.16,11.67 2.15,11.84 2.15,12C2.15,12.17 2.17,12.33 2.19,12.5L1.1,13.32C1,13.39 1,13.53 1.04,13.64L2.07,15.37C2.13,15.5 2.27,15.5 2.38,15.5L3.66,15C3.93,15.18 4.22,15.34 4.53,15.47L4.73,16.79C4.74,16.91 4.85,17 5,17H7.04C7.17,17 7.28,16.91 7.29,16.79L7.5,15.47C7.8,15.35 8.09,15.17 8.36,15L9.64,15.5C9.76,15.53 9.89,15.5 9.95,15.37L11,13.64C11.04,13.53 11,13.4 10.92,13.32L9.82,12.5M6,13.75C5,13.75 4.2,12.97 4.2,12C4.2,11.03 5,10.25 6,10.25C7,10.25 7.8,11.03 7.8,12C7.8,12.97 7,13.75 6,13.75M17,1H7A2,2 0 0,0 5,3V6H7V4H17V20H7V18H5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V3A2,2 0 0,0 17,1Z" />
+</vector>
diff --git a/RazerParts/res/drawable-night/ic_razer_logo.xml b/RazerParts/res/drawable-night/ic_razer_logo.xml
new file mode 100755
index 0000000..024825a
--- /dev/null
+++ b/RazerParts/res/drawable-night/ic_razer_logo.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:width="24dp" android:viewportWidth="48" android:viewportHeight="48">
+        <path android:fillColor="#000000" android:pathData="M31.5642795,24.668786 C31.1218266,24.5363319 30.8146459,24.2686057 30.6765555,24.0346974 C30.4257383,23.6035172 30.7216463,22.9976104 31.5699158,23.2822457 C32.2293679,23.5020631 33.0607285,24.3080601 33.4890905,24.6349679 C32.8606383,24.8688762 32.1307319,24.8435126 31.5642795,24.668786 M30.0171034,22.3804308 C29.7691043,22.8116111 29.0955614,22.85952 28.9151984,21.9830687 C28.777108,21.3038894 29.0617433,20.179439 29.1321976,19.6439865 C29.6451048,20.0723485 29.9889217,20.7177097 30.1213758,21.2954349 C30.2256481,21.7435241 30.1523756,22.1437045 30.0171034,22.3804308 M29.1181067,24.9308759 C28.5995632,25.3902379 27.4835674,25.7086912 26.9875692,25.9144177 C27.100296,25.2549656 27.4863855,24.6349679 27.9203839,24.2319694 C28.2585645,23.9163342 28.6418358,23.781062 28.9123802,23.781062 C29.4111966,23.7782438 29.7888315,24.3390599 29.1181067,24.9308759 M39.9539757,13.5736453 C39.9286121,13.5285546 39.8947941,13.4919184 39.8525215,13.4637366 L39.8187034,13.4411913 L39.8271579,13.4017369 C39.8468851,13.3200099 39.8327943,13.2354648 39.7905217,13.1650105 C39.7707945,13.1255561 39.7397946,13.0945562 39.7059766,13.0663745 C39.5735225,12.9649203 39.384705,12.9818293 39.26916,13.1030107 L39.0437063,13.3369189 L38.6012534,13.5144637 L38.5815262,13.5060092 C38.4659812,13.4637366 38.3307089,13.4609185 38.1954367,13.4947365 C38.1052552,13.5172819 38.0714372,13.5116456 37.9981647,13.4975547 C37.8516198,13.469373 37.7022567,13.4496458 37.4570758,13.5313728 L37.4486213,13.5341909 L37.4373486,13.5341909 C37.344349,13.5285546 37.2400766,13.5454636 37.1019862,13.5933725 C36.9131688,13.6553723 36.7976237,13.8047354 36.7130786,13.9118259 C36.7018059,13.9287349 36.687715,13.9456439 36.6764424,13.9597348 L36.6623515,13.9766438 L36.6454425,13.9822802 C36.1071717,14.1175524 35.8760817,14.4134604 35.7774457,14.6389141 C35.7464458,14.7065502 35.7239004,14.7770045 35.7098096,14.8530951 L35.6929005,14.9432766 L35.6168099,14.8897314 C35.5040831,14.8080044 35.3969926,14.7431864 35.2983566,14.6980957 C34.6670862,14.407824 33.8554528,14.5290054 33.2777277,14.9968219 C32.6605482,15.4956382 32.4153672,16.264999 32.6041847,17.1076322 C32.6802754,17.4458128 32.8183658,17.7868115 33.0269104,18.1503556 C33.463727,18.9056256 34.1288154,19.6101684 34.7713585,20.2893477 C35.3434473,20.8924364 35.8845362,21.4645252 36.1945351,22.0027959 C36.2142623,22.0366139 36.2339895,22.070432 36.2508985,22.1042501 C36.6679878,22.8961562 36.5862609,23.4795177 36.0085357,23.8402436 C35.8281728,23.9557886 35.6252644,24.0262429 35.4082652,24.0516065 L35.3152656,24.0628792 L35.3462655,23.9726977 C35.4899922,23.5527901 35.6619007,22.7327023 35.2053569,21.9379779 C35.1236299,21.7970694 35.0249939,21.6617972 34.9094489,21.5377976 C34.1400881,20.6951644 33.3284548,20.8783455 33.0071832,21.0925265 C32.8803655,21.1770717 32.8296384,21.3377074 32.8831837,21.4814342 C32.88882,21.4983432 32.8972746,21.5152522 32.9057291,21.5321613 C32.9733652,21.6448881 33.1001829,21.7097061 33.2298188,21.692797 C33.6074537,21.6477063 34.0217249,21.8928872 34.2612695,22.3099766 C34.351451,22.464976 34.6191773,23.0229739 34.252815,23.6260626 L34.2161788,23.682426 L34.1626335,23.6401535 C33.939998,23.4654268 33.759635,23.270973 33.6159083,23.1159736 L33.6074537,23.1075191 C33.5877265,23.0849737 33.5651812,23.0652465 33.5482721,23.0427011 C33.5369995,23.0342466 33.5257268,23.0229739 33.5144541,23.0060649 L33.5059996,23.0004286 C32.855002,22.284613 32.2180953,21.8816145 31.6093702,21.7970694 L31.5586432,21.791433 L31.5586432,21.7378878 C31.5530068,21.264435 31.4177346,20.7825277 31.1556446,20.3034386 C30.8428276,19.7313498 30.3637385,19.2099881 29.8057406,18.8323531 C29.7155591,18.7703533 29.6310139,18.7196262 29.5436506,18.6745355 L29.5154689,18.6604446 L29.5126507,18.6294448 C29.2984697,17.0118144 28.2247464,16.1804538 27.2891135,15.9409093 C26.1505723,15.6478195 25.0035765,16.0902724 24.3638516,17.0625415 C24.3074882,17.1470866 24.253943,17.2372681 24.2003977,17.3274496 C23.7128541,18.172901 23.4310369,19.159261 23.1576743,20.1146211 C22.9265843,20.9347089 22.7039487,21.7068879 22.3742227,22.3325219 C22.3544955,22.3691582 22.3347683,22.4057944 22.3150411,22.4396124 C22.083951,22.8397928 21.886679,23.0483375 21.6668616,23.1187917 C21.5203167,23.1667007 21.37659,23.1413371 21.2384996,23.0483375 C20.9792278,22.8707927 21.0750457,22.5016122 21.2413178,21.9999777 C21.2920449,21.8421601 21.3427719,21.692797 21.3653173,21.5575248 C21.4273171,21.2108897 21.3568628,20.8896182 21.1736817,20.6500736 C20.998955,20.4246199 20.7312288,20.2837114 20.4212299,20.2583478 C20.1253219,20.2329843 19.6969599,20.3344384 19.3390521,20.9544361 C19.305234,21.0107996 19.2798705,21.0643448 19.2601433,21.100981 L19.2009617,21.2165261 L19.1502346,21.0953447 C19.0995075,20.9713452 19.0234169,20.7825277 18.8515085,20.6613463 C18.7303271,20.5768012 18.6373274,20.5288923 18.5471459,20.5063469 L18.5358733,20.5035287 L18.5246006,20.4978924 C18.3160559,20.3513475 18.1666928,20.3231658 18.0201479,20.3090749 C17.9468754,20.3006204 17.907421,20.294984 17.8228759,20.2470751 C17.6960582,20.1738027 17.5579678,20.1428028 17.4255137,20.1568936 L17.4001502,20.1597118 L17.0422424,19.8807128 L16.8928794,19.5904412 C16.8139706,19.4382599 16.6364258,19.373442 16.4786082,19.4354418 C16.410972,19.4636235 16.3546086,19.5115324 16.3151542,19.5763503 C16.2897907,19.6214411 16.2756998,19.66935 16.2728817,19.7200771 L16.2700635,19.7595315 L16.2306091,19.7736223 C16.1517003,19.7961677 16.0868823,19.849713 16.0446098,19.9229854 C16.0220644,19.9596216 16.0079735,20.0018942 16.0023372,20.0441668 C15.98261,20.2104389 16.0897005,20.3654383 16.2503363,20.4048927 L16.5687896,20.4838015 L16.9436064,20.7768913 L16.9464246,20.7994367 C16.96897,20.9206181 17.0309697,21.0389813 17.1267876,21.1376173 C17.1944237,21.2080716 17.2056964,21.2390714 17.2282417,21.3095257 C17.2761507,21.4504343 17.3353323,21.5885247 17.5269679,21.7604331 L17.5354224,21.7688877 L17.5410588,21.7773422 C17.5833313,21.8590691 17.6509674,21.9407961 17.7608761,22.0366139 C17.9102392,22.169068 18.0962385,22.1944315 18.2315108,22.2141587 C18.2484198,22.2169769 18.2709652,22.2197951 18.2906923,22.2226133 L18.3104195,22.2254314 L18.3245104,22.2395223 C18.7134181,22.6368844 19.0854167,22.6876115 19.3277794,22.662248 C19.4010519,22.6537935 19.4743243,22.6368844 19.5475968,22.6143391 L19.6349601,22.5833392 L19.6265056,22.6763388 C19.6124147,22.8116111 19.6095966,22.9384288 19.6180511,23.0483375 C19.682869,23.7359713 20.192958,24.3813325 20.8890464,24.6462406 C21.6274072,24.9308759 22.4164952,24.7589675 23.053402,24.175606 C23.3070374,23.9388796 23.5353093,23.648608 23.7438539,23.287882 C24.1806705,22.5297939 24.4568513,21.6026156 24.7245776,20.7064371 C24.961304,19.9088946 25.1867577,19.1564428 25.4967565,18.6181721 C25.5164837,18.584354 25.5362109,18.550536 25.5559381,18.5195361 C26.0350273,17.7642661 26.5817525,17.5416306 27.182023,17.860084 C27.3708405,17.95872 27.5342944,18.0996285 27.6639303,18.2743552 L27.7202937,18.3504458 L27.6272941,18.3673548 C27.1932957,18.4547181 26.3957532,18.7139899 25.9363913,19.5087142 C25.8546643,19.6496228 25.7870282,19.801804 25.7363011,19.9624398 C25.3924842,21.050254 25.9561185,21.6617972 26.3027535,21.8337056 C26.4408439,21.9013417 26.6042979,21.8647055 26.7001157,21.7463423 C26.7142066,21.7322514 26.7226611,21.7181606 26.7339338,21.7012515 C26.7987517,21.5885247 26.7902972,21.444798 26.7113884,21.3405256 C26.4831165,21.0361631 26.4887529,20.5542558 26.7282974,20.1399846 C26.8184789,19.982167 27.1679322,19.472078 27.872475,19.488987 L27.9401111,19.4918052 L27.9316566,19.5594413 C27.8922022,19.8384403 27.8132934,20.0920757 27.7512936,20.294984 C27.7400209,20.3288021 27.7315664,20.359802 27.7231119,20.3908019 C27.7174756,20.4020745 27.7146574,20.4189836 27.7062029,20.4387108 L27.7033847,20.4471653 C27.4102949,21.3687073 27.379295,22.1211591 27.6132032,22.6904297 L27.6329304,22.7383386 L27.5878397,22.7665203 C27.1792048,23.0060649 26.8297516,23.3639727 26.5451163,23.8317891 C26.2069357,24.389787 25.9927547,25.0661482 25.9448458,25.7368729 C25.9363913,25.8467816 25.9363913,25.9425995 25.9392094,26.0412355 L25.9392094,26.0722353 L25.9166641,26.0919625 C24.6231234,27.0839589 24.4399423,28.4310448 24.699214,29.3638595 C25.0148492,30.4939462 25.9730275,31.2661252 27.1369323,31.3337613 C27.2355683,31.3393976 27.3398406,31.3422158 27.4469311,31.3422158 C28.4220184,31.3422158 29.4168329,31.0942167 30.3806475,30.851854 C31.2063717,30.6433093 31.9870052,30.4488555 32.691548,30.4206738 L32.8155476,30.4206738 C33.2749095,30.4206738 33.5567267,30.4883099 33.7258169,30.6404911 C33.841362,30.7447635 33.892089,30.8800357 33.8808164,31.049126 C33.8554528,31.361943 33.4890905,31.460579 32.9733652,31.5704877 C32.8099112,31.6043057 32.6549118,31.6353056 32.5252759,31.6832145 C32.1955499,31.8043959 31.950369,32.0242133 31.8348239,32.3032122 C31.7277334,32.5681203 31.7390061,32.8696647 31.8742783,33.1514818 C31.9982779,33.4192081 32.2998222,33.7404796 33.0184559,33.7404796 C33.0832739,33.7404796 33.1424555,33.7376615 33.184728,33.7348433 L33.3143639,33.7292069 L33.2354551,33.8306611 C33.15091,33.9377516 33.0269104,34.0983874 33.0071832,34.3069321 C32.9930924,34.4562952 32.9987287,34.5605675 33.0269104,34.650749 L33.0297286,34.6620217 L33.0269104,34.6732944 C33.0071832,34.929748 33.0579103,35.0706565 33.1170919,35.2059287 C33.1452736,35.2707467 33.1621827,35.3073829 33.1621827,35.4060189 C33.1621827,35.5525638 33.2044552,35.687836 33.283364,35.7949266 L33.2974549,35.8146538 L33.2326369,36.2655612 L33.0579103,36.541742 C32.9677288,36.6826505 32.9987287,36.871468 33.1311828,36.9757404 C33.1903644,37.0208311 33.2608187,37.0461946 33.3340911,37.0461946 C33.3848182,37.0461946 33.4355453,37.034922 33.480636,37.0123766 L33.5172723,36.9954676 L33.5482721,37.0208311 C33.6074537,37.0771945 33.6863625,37.1081944 33.7709077,37.1081944 C33.8131802,37.1081944 33.858271,37.0997399 33.8977254,37.0828309 C34.0527248,37.0180129 34.1316336,36.8489227 34.0865429,36.6882869 L33.9935432,36.3726517 L34.0611793,35.9048352 L34.0780884,35.8879262 C34.1739062,35.8090174 34.2443605,35.6962906 34.2838149,35.5638365 C34.3091784,35.4708369 34.3317238,35.4454733 34.3796327,35.3891099 C34.4754505,35.276383 34.5684502,35.1580198 34.6191773,34.9043844 L34.6219954,34.8931117 L34.6276318,34.8846572 C34.6783589,34.8085666 34.7149951,34.7071124 34.7431768,34.5633857 C34.7854494,34.37175 34.7121769,34.1970234 34.6614498,34.0702057 C34.6529953,34.0532967 34.6445408,34.0307513 34.6389045,34.0138423 L34.6304499,33.9941151 L34.6360863,33.9743879 C34.7854494,33.4417535 34.6445408,33.0923002 34.5008141,32.8950282 C34.4585415,32.8358466 34.4049962,32.7794832 34.3486328,32.7315743 L34.2781785,32.6695745 L34.3655418,32.6301201 C34.4895414,32.5737567 34.5994501,32.5145751 34.6896315,32.4497571 C35.2532658,32.0495768 35.5576283,31.2858524 35.4392651,30.5503096 C35.3180838,29.7696762 34.7741767,29.1722238 33.9484525,28.9129521 C33.6187264,28.8086797 33.2523641,28.7579527 32.8352748,28.7579527 C31.9616417,28.7579527 31.0203724,28.9834064 30.1101031,29.2004056 C29.3012879,29.3920412 28.5375634,29.5752224 27.9147476,29.5752224 C27.8752932,29.5752224 27.8358388,29.5752224 27.7992025,29.5724042 C26.9058422,29.5385861 26.4408439,29.175042 26.4154804,28.4958627 C26.4070259,28.2816817 26.4464803,28.0703188 26.5338436,27.8702287 L26.5704798,27.7828654 L26.6324796,27.8533196 C26.9255694,28.188682 27.5512035,28.7494981 28.4671092,28.7494981 C28.6277449,28.7494981 28.794017,28.7297709 28.9602891,28.6959529 C30.0734668,28.450772 30.3214659,27.6560477 30.2961024,27.2699582 C30.2848297,27.1177769 30.1721028,26.9937774 30.0227398,26.9684138 C30.0030126,26.9627775 29.9861035,26.9627775 29.9663763,26.9627775 C29.8367404,26.9627775 29.7155591,27.0416863 29.664832,27.1628677 C29.5154689,27.5123209 29.0955614,27.7490473 28.6164722,27.7490473 C28.4361093,27.7490473 27.8217479,27.7011384 27.4807492,27.0811407 L27.4497493,27.0219591 L27.5117491,26.9965956 C27.773839,26.8923232 28.0331108,26.8331416 28.2416555,26.7852327 C28.2754735,26.7767782 28.3064734,26.7683237 28.3374733,26.7626873 C28.348746,26.757051 28.365655,26.7542328 28.3853822,26.7514146 L28.3966549,26.7485965 C29.3379241,26.54287 30.0086489,26.1905985 30.3862839,25.7058731 L30.4172837,25.6664187 L30.4623745,25.6917822 C30.8738275,25.9228723 31.358553,26.0468718 31.9052782,26.0609627 C32.559094,26.0750535 33.249546,25.9200541 33.8554528,25.6269643 C33.9540888,25.5790554 34.038634,25.5339646 34.1231791,25.4804194 L34.1485426,25.4635103 L34.1767244,25.474783 C35.684446,26.0975989 36.9441686,25.5818735 37.6177116,24.8942397 C38.4406176,24.0544246 38.6322533,22.8397928 38.1080734,21.7970694 C38.0629827,21.7068879 38.0122556,21.6138882 37.9615285,21.5237068 C37.4739849,20.6810735 36.7581693,19.9427126 36.0677173,19.2297153 C35.4730832,18.6181721 34.9150853,18.0404469 34.5402685,17.4401764 C34.5177231,17.4063584 34.4951777,17.3697222 34.4754505,17.3359041 C34.2443605,16.9385419 34.1626335,16.659543 34.2105424,16.4369074 C34.2443605,16.2847262 34.3373601,16.1719993 34.4895414,16.0987269 C34.7713585,15.9634546 35.041903,16.2311809 35.3941744,16.6257249 C35.5040831,16.7497245 35.6083554,16.8652695 35.7154459,16.955451 C35.9831722,17.1809047 36.2988074,17.2823588 36.5975336,17.2429044 C36.8793507,17.20345 37.1358043,17.0428143 37.3133491,16.7863607 C37.4824394,16.5439979 37.6092571,16.1240904 37.2485311,15.5012745 C37.2175313,15.4449111 37.1865314,15.394184 37.163986,15.360366 L37.0907135,15.2504573 L37.2203494,15.2673663 C37.3556217,15.2870935 37.55853,15.3152752 37.7473475,15.2250937 C37.8826197,15.163094 37.969983,15.1067305 38.034801,15.0390944 L38.0432555,15.0306399 L38.05171,15.0250036 C38.2856182,14.9179131 38.381436,14.7995499 38.4687993,14.6811867 C38.5138901,14.6248232 38.5364355,14.5910052 38.6209806,14.5430963 C38.7477983,14.4698238 38.8436161,14.3655515 38.8971614,14.2415519 L38.9056159,14.2190066 L39.3283416,14.0499163 L39.6552495,14.0668253 C39.8243398,14.0724617 39.9708847,13.9512803 39.9962482,13.7850082 C40.0075209,13.7117357 39.9934301,13.6384633 39.9539757,13.5736453" android:strokeWidth="1" android:fillType="evenOdd"/>
+</vector>
diff --git a/RazerParts/res/drawable/book_open.xml b/RazerParts/res/drawable/book_open.xml
new file mode 100644
index 0000000..53b927a
--- /dev/null
+++ b/RazerParts/res/drawable/book_open.xml
@@ -0,0 +1,8 @@
+<!-- drawable/book_open.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#666" android:pathData="M13,12H20V13.5H13M13,9.5H20V11H13M13,14.5H20V16H13M21,4H3A2,2 0 0,0 1,6V19A2,2 0 0,0 3,21H21A2,2 0 0,0 23,19V6A2,2 0 0,0 21,4M21,19H12V6H21" />
+</vector>
\ No newline at end of file
diff --git a/RazerParts/res/drawable/brightness_7.xml b/RazerParts/res/drawable/brightness_7.xml
new file mode 100644
index 0000000..f658b22
--- /dev/null
+++ b/RazerParts/res/drawable/brightness_7.xml
@@ -0,0 +1,8 @@
+<!-- drawable/brightness_7.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#666" android:pathData="M12,8A4,4 0 0,0 8,12A4,4 0 0,0 12,16A4,4 0 0,0 16,12A4,4 0 0,0 12,8M12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6A6,6 0 0,1 18,12A6,6 0 0,1 12,18M20,8.69V4H15.31L12,0.69L8.69,4H4V8.69L0.69,12L4,15.31V20H8.69L12,23.31L15.31,20H20V15.31L23.31,12L20,8.69Z" />
+</vector>
\ No newline at end of file
diff --git a/RazerParts/res/drawable/cellphone_cog.xml b/RazerParts/res/drawable/cellphone_cog.xml
new file mode 100644
index 0000000..4525870
--- /dev/null
+++ b/RazerParts/res/drawable/cellphone_cog.xml
@@ -0,0 +1,8 @@
+<!-- drawable/cellphone_cog.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#fff" android:pathData="M9.82,12.5C9.84,12.33 9.86,12.17 9.86,12C9.86,11.83 9.84,11.67 9.82,11.5L10.9,10.69C11,10.62 11,10.5 10.96,10.37L9.93,8.64C9.87,8.53 9.73,8.5 9.62,8.53L8.34,9.03C8.07,8.83 7.78,8.67 7.47,8.54L7.27,7.21C7.27,7.09 7.16,7 7.03,7H5C4.85,7 4.74,7.09 4.72,7.21L4.5,8.53C4.21,8.65 3.92,8.83 3.65,9L2.37,8.5C2.25,8.47 2.12,8.5 2.06,8.63L1.03,10.36C0.97,10.5 1,10.61 1.1,10.69L2.18,11.5C2.16,11.67 2.15,11.84 2.15,12C2.15,12.17 2.17,12.33 2.19,12.5L1.1,13.32C1,13.39 1,13.53 1.04,13.64L2.07,15.37C2.13,15.5 2.27,15.5 2.38,15.5L3.66,15C3.93,15.18 4.22,15.34 4.53,15.47L4.73,16.79C4.74,16.91 4.85,17 5,17H7.04C7.17,17 7.28,16.91 7.29,16.79L7.5,15.47C7.8,15.35 8.09,15.17 8.36,15L9.64,15.5C9.76,15.53 9.89,15.5 9.95,15.37L11,13.64C11.04,13.53 11,13.4 10.92,13.32L9.82,12.5M6,13.75C5,13.75 4.2,12.97 4.2,12C4.2,11.03 5,10.25 6,10.25C7,10.25 7.8,11.03 7.8,12C7.8,12.97 7,13.75 6,13.75M17,1H7A2,2 0 0,0 5,3V6H7V4H17V20H7V18H5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V3A2,2 0 0,0 17,1Z" />
+</vector>
diff --git a/RazerParts/res/drawable/cellphone_screenshot.xml b/RazerParts/res/drawable/cellphone_screenshot.xml
new file mode 100755
index 0000000..807531d
--- /dev/null
+++ b/RazerParts/res/drawable/cellphone_screenshot.xml
@@ -0,0 +1,8 @@
+<!-- drawable/cellphone_screenshot.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#666" android:pathData="M7,1A2,2 0 0,0 5,3V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V3A2,2 0 0,0 17,1H7M7,4H17V20H7V4M9,6V10H10.5V7.5H13V6H9M13.5,14V16.5H11V18H15V14H13.5Z" />
+</vector>
\ No newline at end of file
diff --git a/RazerParts/res/drawable/dolby.xml b/RazerParts/res/drawable/dolby.xml
new file mode 100755
index 0000000..336b647
--- /dev/null
+++ b/RazerParts/res/drawable/dolby.xml
@@ -0,0 +1,8 @@
+<!-- drawable/dolby.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#666" android:pathData="M2,5V19H22V5H2M6,17H4V7H6C8.86,7.09 11.1,9.33 11,12C11.1,14.67 8.86,16.91 6,17M20,17H18C15.14,16.91 12.9,14.67 13,12C12.9,9.33 15.14,7.09 18,7H20V17Z" />
+</vector>
\ No newline at end of file
diff --git a/RazerParts/res/drawable/flash.xml b/RazerParts/res/drawable/flash.xml
new file mode 100755
index 0000000..352b10f
--- /dev/null
+++ b/RazerParts/res/drawable/flash.xml
@@ -0,0 +1,8 @@
+<!-- drawable/flash.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#666" android:pathData="M7,2V13H10V22L17,10H13L17,2H7Z" />
+</vector>
\ No newline at end of file
diff --git a/RazerParts/res/drawable/format_color_fill.xml b/RazerParts/res/drawable/format_color_fill.xml
new file mode 100644
index 0000000..1dea932
--- /dev/null
+++ b/RazerParts/res/drawable/format_color_fill.xml
@@ -0,0 +1,8 @@
+<!-- drawable/format_color_fill.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#666" android:pathData="M19,11.5C19,11.5 17,13.67 17,15A2,2 0 0,0 19,17A2,2 0 0,0 21,15C21,13.67 19,11.5 19,11.5M5.21,10L10,5.21L14.79,10M16.56,8.94L7.62,0L6.21,1.41L8.59,3.79L3.44,8.94C2.85,9.5 2.85,10.47 3.44,11.06L8.94,16.56C9.23,16.85 9.62,17 10,17C10.38,17 10.77,16.85 11.06,16.56L16.56,11.06C17.15,10.47 17.15,9.5 16.56,8.94Z" />
+</vector>
\ No newline at end of file
diff --git a/RazerParts/res/drawable/ic_razer_logo.xml b/RazerParts/res/drawable/ic_razer_logo.xml
new file mode 100755
index 0000000..bde0442
--- /dev/null
+++ b/RazerParts/res/drawable/ic_razer_logo.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:width="24dp" android:viewportWidth="48" android:viewportHeight="48">
+        <path android:fillColor="#ffffff" android:pathData="M31.5642795,24.668786 C31.1218266,24.5363319 30.8146459,24.2686057 30.6765555,24.0346974 C30.4257383,23.6035172 30.7216463,22.9976104 31.5699158,23.2822457 C32.2293679,23.5020631 33.0607285,24.3080601 33.4890905,24.6349679 C32.8606383,24.8688762 32.1307319,24.8435126 31.5642795,24.668786 M30.0171034,22.3804308 C29.7691043,22.8116111 29.0955614,22.85952 28.9151984,21.9830687 C28.777108,21.3038894 29.0617433,20.179439 29.1321976,19.6439865 C29.6451048,20.0723485 29.9889217,20.7177097 30.1213758,21.2954349 C30.2256481,21.7435241 30.1523756,22.1437045 30.0171034,22.3804308 M29.1181067,24.9308759 C28.5995632,25.3902379 27.4835674,25.7086912 26.9875692,25.9144177 C27.100296,25.2549656 27.4863855,24.6349679 27.9203839,24.2319694 C28.2585645,23.9163342 28.6418358,23.781062 28.9123802,23.781062 C29.4111966,23.7782438 29.7888315,24.3390599 29.1181067,24.9308759 M39.9539757,13.5736453 C39.9286121,13.5285546 39.8947941,13.4919184 39.8525215,13.4637366 L39.8187034,13.4411913 L39.8271579,13.4017369 C39.8468851,13.3200099 39.8327943,13.2354648 39.7905217,13.1650105 C39.7707945,13.1255561 39.7397946,13.0945562 39.7059766,13.0663745 C39.5735225,12.9649203 39.384705,12.9818293 39.26916,13.1030107 L39.0437063,13.3369189 L38.6012534,13.5144637 L38.5815262,13.5060092 C38.4659812,13.4637366 38.3307089,13.4609185 38.1954367,13.4947365 C38.1052552,13.5172819 38.0714372,13.5116456 37.9981647,13.4975547 C37.8516198,13.469373 37.7022567,13.4496458 37.4570758,13.5313728 L37.4486213,13.5341909 L37.4373486,13.5341909 C37.344349,13.5285546 37.2400766,13.5454636 37.1019862,13.5933725 C36.9131688,13.6553723 36.7976237,13.8047354 36.7130786,13.9118259 C36.7018059,13.9287349 36.687715,13.9456439 36.6764424,13.9597348 L36.6623515,13.9766438 L36.6454425,13.9822802 C36.1071717,14.1175524 35.8760817,14.4134604 35.7774457,14.6389141 C35.7464458,14.7065502 35.7239004,14.7770045 35.7098096,14.8530951 L35.6929005,14.9432766 L35.6168099,14.8897314 C35.5040831,14.8080044 35.3969926,14.7431864 35.2983566,14.6980957 C34.6670862,14.407824 33.8554528,14.5290054 33.2777277,14.9968219 C32.6605482,15.4956382 32.4153672,16.264999 32.6041847,17.1076322 C32.6802754,17.4458128 32.8183658,17.7868115 33.0269104,18.1503556 C33.463727,18.9056256 34.1288154,19.6101684 34.7713585,20.2893477 C35.3434473,20.8924364 35.8845362,21.4645252 36.1945351,22.0027959 C36.2142623,22.0366139 36.2339895,22.070432 36.2508985,22.1042501 C36.6679878,22.8961562 36.5862609,23.4795177 36.0085357,23.8402436 C35.8281728,23.9557886 35.6252644,24.0262429 35.4082652,24.0516065 L35.3152656,24.0628792 L35.3462655,23.9726977 C35.4899922,23.5527901 35.6619007,22.7327023 35.2053569,21.9379779 C35.1236299,21.7970694 35.0249939,21.6617972 34.9094489,21.5377976 C34.1400881,20.6951644 33.3284548,20.8783455 33.0071832,21.0925265 C32.8803655,21.1770717 32.8296384,21.3377074 32.8831837,21.4814342 C32.88882,21.4983432 32.8972746,21.5152522 32.9057291,21.5321613 C32.9733652,21.6448881 33.1001829,21.7097061 33.2298188,21.692797 C33.6074537,21.6477063 34.0217249,21.8928872 34.2612695,22.3099766 C34.351451,22.464976 34.6191773,23.0229739 34.252815,23.6260626 L34.2161788,23.682426 L34.1626335,23.6401535 C33.939998,23.4654268 33.759635,23.270973 33.6159083,23.1159736 L33.6074537,23.1075191 C33.5877265,23.0849737 33.5651812,23.0652465 33.5482721,23.0427011 C33.5369995,23.0342466 33.5257268,23.0229739 33.5144541,23.0060649 L33.5059996,23.0004286 C32.855002,22.284613 32.2180953,21.8816145 31.6093702,21.7970694 L31.5586432,21.791433 L31.5586432,21.7378878 C31.5530068,21.264435 31.4177346,20.7825277 31.1556446,20.3034386 C30.8428276,19.7313498 30.3637385,19.2099881 29.8057406,18.8323531 C29.7155591,18.7703533 29.6310139,18.7196262 29.5436506,18.6745355 L29.5154689,18.6604446 L29.5126507,18.6294448 C29.2984697,17.0118144 28.2247464,16.1804538 27.2891135,15.9409093 C26.1505723,15.6478195 25.0035765,16.0902724 24.3638516,17.0625415 C24.3074882,17.1470866 24.253943,17.2372681 24.2003977,17.3274496 C23.7128541,18.172901 23.4310369,19.159261 23.1576743,20.1146211 C22.9265843,20.9347089 22.7039487,21.7068879 22.3742227,22.3325219 C22.3544955,22.3691582 22.3347683,22.4057944 22.3150411,22.4396124 C22.083951,22.8397928 21.886679,23.0483375 21.6668616,23.1187917 C21.5203167,23.1667007 21.37659,23.1413371 21.2384996,23.0483375 C20.9792278,22.8707927 21.0750457,22.5016122 21.2413178,21.9999777 C21.2920449,21.8421601 21.3427719,21.692797 21.3653173,21.5575248 C21.4273171,21.2108897 21.3568628,20.8896182 21.1736817,20.6500736 C20.998955,20.4246199 20.7312288,20.2837114 20.4212299,20.2583478 C20.1253219,20.2329843 19.6969599,20.3344384 19.3390521,20.9544361 C19.305234,21.0107996 19.2798705,21.0643448 19.2601433,21.100981 L19.2009617,21.2165261 L19.1502346,21.0953447 C19.0995075,20.9713452 19.0234169,20.7825277 18.8515085,20.6613463 C18.7303271,20.5768012 18.6373274,20.5288923 18.5471459,20.5063469 L18.5358733,20.5035287 L18.5246006,20.4978924 C18.3160559,20.3513475 18.1666928,20.3231658 18.0201479,20.3090749 C17.9468754,20.3006204 17.907421,20.294984 17.8228759,20.2470751 C17.6960582,20.1738027 17.5579678,20.1428028 17.4255137,20.1568936 L17.4001502,20.1597118 L17.0422424,19.8807128 L16.8928794,19.5904412 C16.8139706,19.4382599 16.6364258,19.373442 16.4786082,19.4354418 C16.410972,19.4636235 16.3546086,19.5115324 16.3151542,19.5763503 C16.2897907,19.6214411 16.2756998,19.66935 16.2728817,19.7200771 L16.2700635,19.7595315 L16.2306091,19.7736223 C16.1517003,19.7961677 16.0868823,19.849713 16.0446098,19.9229854 C16.0220644,19.9596216 16.0079735,20.0018942 16.0023372,20.0441668 C15.98261,20.2104389 16.0897005,20.3654383 16.2503363,20.4048927 L16.5687896,20.4838015 L16.9436064,20.7768913 L16.9464246,20.7994367 C16.96897,20.9206181 17.0309697,21.0389813 17.1267876,21.1376173 C17.1944237,21.2080716 17.2056964,21.2390714 17.2282417,21.3095257 C17.2761507,21.4504343 17.3353323,21.5885247 17.5269679,21.7604331 L17.5354224,21.7688877 L17.5410588,21.7773422 C17.5833313,21.8590691 17.6509674,21.9407961 17.7608761,22.0366139 C17.9102392,22.169068 18.0962385,22.1944315 18.2315108,22.2141587 C18.2484198,22.2169769 18.2709652,22.2197951 18.2906923,22.2226133 L18.3104195,22.2254314 L18.3245104,22.2395223 C18.7134181,22.6368844 19.0854167,22.6876115 19.3277794,22.662248 C19.4010519,22.6537935 19.4743243,22.6368844 19.5475968,22.6143391 L19.6349601,22.5833392 L19.6265056,22.6763388 C19.6124147,22.8116111 19.6095966,22.9384288 19.6180511,23.0483375 C19.682869,23.7359713 20.192958,24.3813325 20.8890464,24.6462406 C21.6274072,24.9308759 22.4164952,24.7589675 23.053402,24.175606 C23.3070374,23.9388796 23.5353093,23.648608 23.7438539,23.287882 C24.1806705,22.5297939 24.4568513,21.6026156 24.7245776,20.7064371 C24.961304,19.9088946 25.1867577,19.1564428 25.4967565,18.6181721 C25.5164837,18.584354 25.5362109,18.550536 25.5559381,18.5195361 C26.0350273,17.7642661 26.5817525,17.5416306 27.182023,17.860084 C27.3708405,17.95872 27.5342944,18.0996285 27.6639303,18.2743552 L27.7202937,18.3504458 L27.6272941,18.3673548 C27.1932957,18.4547181 26.3957532,18.7139899 25.9363913,19.5087142 C25.8546643,19.6496228 25.7870282,19.801804 25.7363011,19.9624398 C25.3924842,21.050254 25.9561185,21.6617972 26.3027535,21.8337056 C26.4408439,21.9013417 26.6042979,21.8647055 26.7001157,21.7463423 C26.7142066,21.7322514 26.7226611,21.7181606 26.7339338,21.7012515 C26.7987517,21.5885247 26.7902972,21.444798 26.7113884,21.3405256 C26.4831165,21.0361631 26.4887529,20.5542558 26.7282974,20.1399846 C26.8184789,19.982167 27.1679322,19.472078 27.872475,19.488987 L27.9401111,19.4918052 L27.9316566,19.5594413 C27.8922022,19.8384403 27.8132934,20.0920757 27.7512936,20.294984 C27.7400209,20.3288021 27.7315664,20.359802 27.7231119,20.3908019 C27.7174756,20.4020745 27.7146574,20.4189836 27.7062029,20.4387108 L27.7033847,20.4471653 C27.4102949,21.3687073 27.379295,22.1211591 27.6132032,22.6904297 L27.6329304,22.7383386 L27.5878397,22.7665203 C27.1792048,23.0060649 26.8297516,23.3639727 26.5451163,23.8317891 C26.2069357,24.389787 25.9927547,25.0661482 25.9448458,25.7368729 C25.9363913,25.8467816 25.9363913,25.9425995 25.9392094,26.0412355 L25.9392094,26.0722353 L25.9166641,26.0919625 C24.6231234,27.0839589 24.4399423,28.4310448 24.699214,29.3638595 C25.0148492,30.4939462 25.9730275,31.2661252 27.1369323,31.3337613 C27.2355683,31.3393976 27.3398406,31.3422158 27.4469311,31.3422158 C28.4220184,31.3422158 29.4168329,31.0942167 30.3806475,30.851854 C31.2063717,30.6433093 31.9870052,30.4488555 32.691548,30.4206738 L32.8155476,30.4206738 C33.2749095,30.4206738 33.5567267,30.4883099 33.7258169,30.6404911 C33.841362,30.7447635 33.892089,30.8800357 33.8808164,31.049126 C33.8554528,31.361943 33.4890905,31.460579 32.9733652,31.5704877 C32.8099112,31.6043057 32.6549118,31.6353056 32.5252759,31.6832145 C32.1955499,31.8043959 31.950369,32.0242133 31.8348239,32.3032122 C31.7277334,32.5681203 31.7390061,32.8696647 31.8742783,33.1514818 C31.9982779,33.4192081 32.2998222,33.7404796 33.0184559,33.7404796 C33.0832739,33.7404796 33.1424555,33.7376615 33.184728,33.7348433 L33.3143639,33.7292069 L33.2354551,33.8306611 C33.15091,33.9377516 33.0269104,34.0983874 33.0071832,34.3069321 C32.9930924,34.4562952 32.9987287,34.5605675 33.0269104,34.650749 L33.0297286,34.6620217 L33.0269104,34.6732944 C33.0071832,34.929748 33.0579103,35.0706565 33.1170919,35.2059287 C33.1452736,35.2707467 33.1621827,35.3073829 33.1621827,35.4060189 C33.1621827,35.5525638 33.2044552,35.687836 33.283364,35.7949266 L33.2974549,35.8146538 L33.2326369,36.2655612 L33.0579103,36.541742 C32.9677288,36.6826505 32.9987287,36.871468 33.1311828,36.9757404 C33.1903644,37.0208311 33.2608187,37.0461946 33.3340911,37.0461946 C33.3848182,37.0461946 33.4355453,37.034922 33.480636,37.0123766 L33.5172723,36.9954676 L33.5482721,37.0208311 C33.6074537,37.0771945 33.6863625,37.1081944 33.7709077,37.1081944 C33.8131802,37.1081944 33.858271,37.0997399 33.8977254,37.0828309 C34.0527248,37.0180129 34.1316336,36.8489227 34.0865429,36.6882869 L33.9935432,36.3726517 L34.0611793,35.9048352 L34.0780884,35.8879262 C34.1739062,35.8090174 34.2443605,35.6962906 34.2838149,35.5638365 C34.3091784,35.4708369 34.3317238,35.4454733 34.3796327,35.3891099 C34.4754505,35.276383 34.5684502,35.1580198 34.6191773,34.9043844 L34.6219954,34.8931117 L34.6276318,34.8846572 C34.6783589,34.8085666 34.7149951,34.7071124 34.7431768,34.5633857 C34.7854494,34.37175 34.7121769,34.1970234 34.6614498,34.0702057 C34.6529953,34.0532967 34.6445408,34.0307513 34.6389045,34.0138423 L34.6304499,33.9941151 L34.6360863,33.9743879 C34.7854494,33.4417535 34.6445408,33.0923002 34.5008141,32.8950282 C34.4585415,32.8358466 34.4049962,32.7794832 34.3486328,32.7315743 L34.2781785,32.6695745 L34.3655418,32.6301201 C34.4895414,32.5737567 34.5994501,32.5145751 34.6896315,32.4497571 C35.2532658,32.0495768 35.5576283,31.2858524 35.4392651,30.5503096 C35.3180838,29.7696762 34.7741767,29.1722238 33.9484525,28.9129521 C33.6187264,28.8086797 33.2523641,28.7579527 32.8352748,28.7579527 C31.9616417,28.7579527 31.0203724,28.9834064 30.1101031,29.2004056 C29.3012879,29.3920412 28.5375634,29.5752224 27.9147476,29.5752224 C27.8752932,29.5752224 27.8358388,29.5752224 27.7992025,29.5724042 C26.9058422,29.5385861 26.4408439,29.175042 26.4154804,28.4958627 C26.4070259,28.2816817 26.4464803,28.0703188 26.5338436,27.8702287 L26.5704798,27.7828654 L26.6324796,27.8533196 C26.9255694,28.188682 27.5512035,28.7494981 28.4671092,28.7494981 C28.6277449,28.7494981 28.794017,28.7297709 28.9602891,28.6959529 C30.0734668,28.450772 30.3214659,27.6560477 30.2961024,27.2699582 C30.2848297,27.1177769 30.1721028,26.9937774 30.0227398,26.9684138 C30.0030126,26.9627775 29.9861035,26.9627775 29.9663763,26.9627775 C29.8367404,26.9627775 29.7155591,27.0416863 29.664832,27.1628677 C29.5154689,27.5123209 29.0955614,27.7490473 28.6164722,27.7490473 C28.4361093,27.7490473 27.8217479,27.7011384 27.4807492,27.0811407 L27.4497493,27.0219591 L27.5117491,26.9965956 C27.773839,26.8923232 28.0331108,26.8331416 28.2416555,26.7852327 C28.2754735,26.7767782 28.3064734,26.7683237 28.3374733,26.7626873 C28.348746,26.757051 28.365655,26.7542328 28.3853822,26.7514146 L28.3966549,26.7485965 C29.3379241,26.54287 30.0086489,26.1905985 30.3862839,25.7058731 L30.4172837,25.6664187 L30.4623745,25.6917822 C30.8738275,25.9228723 31.358553,26.0468718 31.9052782,26.0609627 C32.559094,26.0750535 33.249546,25.9200541 33.8554528,25.6269643 C33.9540888,25.5790554 34.038634,25.5339646 34.1231791,25.4804194 L34.1485426,25.4635103 L34.1767244,25.474783 C35.684446,26.0975989 36.9441686,25.5818735 37.6177116,24.8942397 C38.4406176,24.0544246 38.6322533,22.8397928 38.1080734,21.7970694 C38.0629827,21.7068879 38.0122556,21.6138882 37.9615285,21.5237068 C37.4739849,20.6810735 36.7581693,19.9427126 36.0677173,19.2297153 C35.4730832,18.6181721 34.9150853,18.0404469 34.5402685,17.4401764 C34.5177231,17.4063584 34.4951777,17.3697222 34.4754505,17.3359041 C34.2443605,16.9385419 34.1626335,16.659543 34.2105424,16.4369074 C34.2443605,16.2847262 34.3373601,16.1719993 34.4895414,16.0987269 C34.7713585,15.9634546 35.041903,16.2311809 35.3941744,16.6257249 C35.5040831,16.7497245 35.6083554,16.8652695 35.7154459,16.955451 C35.9831722,17.1809047 36.2988074,17.2823588 36.5975336,17.2429044 C36.8793507,17.20345 37.1358043,17.0428143 37.3133491,16.7863607 C37.4824394,16.5439979 37.6092571,16.1240904 37.2485311,15.5012745 C37.2175313,15.4449111 37.1865314,15.394184 37.163986,15.360366 L37.0907135,15.2504573 L37.2203494,15.2673663 C37.3556217,15.2870935 37.55853,15.3152752 37.7473475,15.2250937 C37.8826197,15.163094 37.969983,15.1067305 38.034801,15.0390944 L38.0432555,15.0306399 L38.05171,15.0250036 C38.2856182,14.9179131 38.381436,14.7995499 38.4687993,14.6811867 C38.5138901,14.6248232 38.5364355,14.5910052 38.6209806,14.5430963 C38.7477983,14.4698238 38.8436161,14.3655515 38.8971614,14.2415519 L38.9056159,14.2190066 L39.3283416,14.0499163 L39.6552495,14.0668253 C39.8243398,14.0724617 39.9708847,13.9512803 39.9962482,13.7850082 C40.0075209,13.7117357 39.9934301,13.6384633 39.9539757,13.5736453" android:strokeWidth="1" android:fillType="evenOdd"/>
+</vector>
diff --git a/RazerParts/res/drawable/led_on.xml b/RazerParts/res/drawable/led_on.xml
new file mode 100755
index 0000000..f0005cf
--- /dev/null
+++ b/RazerParts/res/drawable/led_on.xml
@@ -0,0 +1,8 @@
+<!-- drawable/led_on.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#666" android:pathData="M11,0V4H13V0H11M18.3,2.29L15.24,5.29L16.64,6.71L19.7,3.71L18.3,2.29M5.71,2.29L4.29,3.71L7.29,6.71L8.71,5.29L5.71,2.29M12,6A4,4 0 0,0 8,10V16H6V18H9V23H11V18H13V23H15V18H18V16H16V10A4,4 0 0,0 12,6M2,9V11H6V9H2M18,9V11H22V9H18Z" />
+</vector>
\ No newline at end of file
diff --git a/RazerParts/res/drawable/overscan.xml b/RazerParts/res/drawable/overscan.xml
new file mode 100755
index 0000000..817b956
--- /dev/null
+++ b/RazerParts/res/drawable/overscan.xml
@@ -0,0 +1,8 @@
+<!-- drawable/overscan.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#666" android:pathData="M12 5.5L10 8H14L12 5.5M18 10V14L20.5 12L18 10M6 10L3.5 12L6 14V10M14 16H10L12 18.5L14 16M21 3H3C1.9 3 1 3.9 1 5V19C1 20.1 1.9 21 3 21H21C22.1 21 23 20.1 23 19V5C23 3.9 22.1 3 21 3M21 19H3V5H21V19Z" />
+</vector>
\ No newline at end of file
diff --git a/RazerParts/res/drawable/power.xml b/RazerParts/res/drawable/power.xml
new file mode 100644
index 0000000..a3faf1a
--- /dev/null
+++ b/RazerParts/res/drawable/power.xml
@@ -0,0 +1,8 @@
+<!-- drawable/power.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="24dp"
+    android:width="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path android:fillColor="#666" android:pathData="M16.56,5.44L15.11,6.89C16.84,7.94 18,9.83 18,12A6,6 0 0,1 12,18A6,6 0 0,1 6,12C6,9.83 7.16,7.94 8.88,6.88L7.44,5.44C5.36,6.88 4,9.28 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12C20,9.28 18.64,6.88 16.56,5.44M13,3H11V13H13" />
+</vector>
\ No newline at end of file
diff --git a/RazerParts/res/values-zh-rCN/arrays.xml b/RazerParts/res/values-zh-rCN/arrays.xml
new file mode 100755
index 0000000..fa23f1f
--- /dev/null
+++ b/RazerParts/res/values-zh-rCN/arrays.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string-array name="chroma_mode_entries">
+        <item>纯颜色</item>
+        <item>呼吸 [Bug]</item>
+        <item>变色</item>
+        <item>波浪 (左到右)</item>
+        <item>波浪 (右到左)</item>
+    </string-array>
+</resources>
\ No newline at end of file
diff --git a/RazerParts/res/values-zh-rCN/strings.xml b/RazerParts/res/values-zh-rCN/strings.xml
new file mode 100755
index 0000000..21a8780
--- /dev/null
+++ b/RazerParts/res/values-zh-rCN/strings.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string name="device_settings_title">Razer设置</string>
+    <string name="device_settings_summary">设备设置</string>
+
+    <string name="app_name">RazerParts</string>
+
+    <string name="category_display">显示</string>
+    <string name="pref_resolution">分辨率(需要重新切换手势)</string>
+    <string name="pref_refresh_rate">刷新率</string>
+
+    <string name="category_chroma">Chroma MCU</string>
+    <string name="pref_chroma">Chroma</string>
+    <string name="pref_chroma_summary">Led设置</string>
+    <string name="category_others">其他</string>
+    <string name="pref_dolby_atmos">[WIP] Dolby Atmos™</string>
+    <string name="pref_dolby_atmos_summary">音效设置</string>
+    <string name="pref_doze">主动显示</string>
+    <string name="pref_doze_summary">休眠设置</string>
+
+    <string name="chroma_category_control">控制</string>
+    <string name="chroma_switch">启用</string>
+    <string name="chroma_category_custom">自定义</string>
+    <string name="chroma_mode">模式</string>
+    <string name="chroma_color">颜色</string>
+    <string name="chroma_brightness">亮度 (5-255)</string>
+</resources>
diff --git a/RazerParts/res/values/arrays.xml b/RazerParts/res/values/arrays.xml
new file mode 100755
index 0000000..73a6ccd
--- /dev/null
+++ b/RazerParts/res/values/arrays.xml
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <string-array name="resolution_entries">
+        <item>1080p</item>
+        <item>1440p</item>
+    </string-array>
+    <string-array name="resolution_values">
+        <item>1080</item>
+        <item>1440</item>
+    </string-array>
+    <string-array name="refresh_rate_entries">
+        <item>60Hz</item>
+        <item>90Hz</item>
+        <item>120Hz</item>
+    </string-array>
+    <string-array name="refresh_rate_values">
+        <item>60</item>
+        <item>90</item>
+        <item>120</item>
+    </string-array>
+    <string-array name="chroma_mode_entries">
+        <item>Color</item>
+        <item>Breath [Bug]</item>
+        <item>Spectrum</item>
+        <item>Wave (LTR)</item>
+        <item>Wave (RTL)</item>
+    </string-array>
+    <string-array name="chroma_mode_values">
+        <item>color</item>
+        <item>breath</item>
+        <item>spectrum</item>
+        <item>wave_ltr</item>
+        <item>wave_rtl</item>
+    </string-array>
+</resources>
\ No newline at end of file
diff --git a/RazerParts/res/values/colors.xml b/RazerParts/res/values/colors.xml
new file mode 100755
index 0000000..07424c2
--- /dev/null
+++ b/RazerParts/res/values/colors.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="device_settings_hp_bg">#44d62c</color>
+</resources>
diff --git a/RazerParts/res/values/strings.xml b/RazerParts/res/values/strings.xml
new file mode 100755
index 0000000..a677d6f
--- /dev/null
+++ b/RazerParts/res/values/strings.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  ~ Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+  ~
+  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
+  ~ of this software and associated documentation files (the "Software"), to deal
+  ~ in the Software without restriction, including without limitation the rights
+  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  ~ copies of the Software, and to permit persons to whom the Software is
+  ~ furnished to do so, subject to the following conditions:
+  ~
+  ~ The above copyright notice and this permission notice shall be included in all
+  ~ copies or substantial portions of the Software.
+  -->
+<resources>
+    <string name="device_settings_title">Razer Parts</string>
+    <string name="device_settings_summary">Device Extra Settings</string>
+
+    <string name="app_name">RazerParts</string>
+
+    <string name="category_display">Display</string>
+    <string name="pref_resolution">Resolution (Require reconfigure gesture)</string>
+    <string name="pref_refresh_rate">Refresh Rate</string>
+    <string name="pref_summary_place_holder"> </string>
+
+    <string name="category_chroma">Chroma MCU</string>
+    <string name="pref_chroma">Chroma</string>
+    <string name="pref_chroma_summary">Led configurator</string>
+    <string name="category_others">Others</string>
+    <string name="pref_dolby_atmos">[WIP] Dolby Atmos™</string>
+    <string name="pref_dolby_atmos_summary">Audio effects</string>
+    <string name="pref_doze">Active wakeup</string>
+    <string name="pref_doze_summary">Doze settings</string>
+
+    <string name="chroma_category_control">Control</string>
+    <string name="chroma_switch">Enabled</string>
+    <string name="chroma_category_custom">Custom</string>
+    <string name="chroma_mode">Mode</string>
+    <string name="chroma_color">Color</string>
+    <string name="chroma_brightness">Brightness (5-255)</string>
+</resources>
diff --git a/RazerParts/res/values/styles.xml b/RazerParts/res/values/styles.xml
new file mode 100755
index 0000000..34b99a9
--- /dev/null
+++ b/RazerParts/res/values/styles.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2015-2016 The CyanogenMod Project
+                   2017 The LineageOS Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <style name="DeviceSettingsTheme" parent="@android:style/Theme.DeviceDefault.Settings">
+        <item name="preferenceTheme">@style/PreferenceTheme</item>
+    </style>
+
+    <style name="PreferenceTheme" parent="@style/PreferenceThemeOverlay.SettingsBase" />
+</resources>
diff --git a/RazerParts/res/xml/chroma_settings.xml b/RazerParts/res/xml/chroma_settings.xml
new file mode 100755
index 0000000..d6825b1
--- /dev/null
+++ b/RazerParts/res/xml/chroma_settings.xml
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  ~ Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+  ~
+  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
+  ~ of this software and associated documentation files (the "Software"), to deal
+  ~ in the Software without restriction, including without limitation the rights
+  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  ~ copies of the Software, and to permit persons to whom the Software is
+  ~ furnished to do so, subject to the following conditions:
+  ~
+  ~ The above copyright notice and this permission notice shall be included in all
+  ~ copies or substantial portions of the Software.
+  -->
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <PreferenceCategory
+            android:key="chroma_control"
+            android:title="@string/chroma_category_control">
+
+        <SwitchPreference
+            android:defaultValue="false"
+            android:icon="@drawable/power"
+            android:key="chroma_switch"
+            android:title="@string/chroma_switch" />
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+            android:key="chroma_custom"
+            android:title="@string/chroma_category_custom">
+
+        <ListPreference
+            android:icon="@drawable/book_open"
+            android:defaultValue="color"
+            android:key="chroma_mode"
+            android:entries="@array/chroma_mode_entries"
+            android:entryValues="@array/chroma_mode_values"
+            android:summary="@string/pref_summary_place_holder"
+            android:title="@string/chroma_mode" />
+
+        <EditTextPreference
+            android:defaultValue="#00FF00"
+            android:icon="@drawable/format_color_fill"
+            android:key="chroma_color"
+            android:summary="@string/pref_summary_place_holder"
+            android:title="@string/chroma_color" />
+
+        <EditTextPreference
+            android:defaultValue="200"
+            android:icon="@drawable/brightness_7"
+            android:key="chroma_brightness"
+            android:summary="@string/pref_summary_place_holder"
+            android:title="@string/chroma_brightness" />
+
+    </PreferenceCategory>
+
+</PreferenceScreen>
diff --git a/RazerParts/res/xml/device_settings.xml b/RazerParts/res/xml/device_settings.xml
new file mode 100755
index 0000000..ec06a3c
--- /dev/null
+++ b/RazerParts/res/xml/device_settings.xml
@@ -0,0 +1,70 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  ~ Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+  ~
+  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
+  ~ of this software and associated documentation files (the "Software"), to deal
+  ~ in the Software without restriction, including without limitation the rights
+  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  ~ copies of the Software, and to permit persons to whom the Software is
+  ~ furnished to do so, subject to the following conditions:
+  ~
+  ~ The above copyright notice and this permission notice shall be included in all
+  ~ copies or substantial portions of the Software.
+  -->
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <PreferenceCategory
+            android:key="razer_parts_display"
+            android:title="@string/category_display">
+
+        <ListPreference
+            android:defaultValue="1440"
+            android:icon="@drawable/overscan"
+            android:key="screen_resolution"
+            android:entries="@array/resolution_entries"
+            android:entryValues="@array/resolution_values"
+            android:summary="@string/pref_summary_place_holder"
+            android:title="@string/pref_resolution" />
+
+        <ListPreference
+            android:defaultValue="120"
+            android:icon="@drawable/cellphone_screenshot"
+            android:key="screen_refresh_rate"
+            android:entries="@array/refresh_rate_entries"
+            android:entryValues="@array/refresh_rate_values"
+            android:summary="@string/pref_summary_place_holder"
+            android:title="@string/pref_refresh_rate" />
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+            android:key="razer_parts_chroma"
+            android:title="@string/category_chroma">
+
+        <Preference
+            android:icon="@drawable/led_on"
+            android:key="chroma"
+            android:summary="@string/pref_chroma_summary"
+            android:title="@string/pref_chroma" />
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="razer_parts_others"
+        android:title="@string/category_others">
+
+        <Preference
+            android:icon="@drawable/dolby"
+            android:key="dolby_atmos"
+            android:summary="@string/pref_dolby_atmos_summary"
+            android:title="@string/pref_dolby_atmos" />
+
+        <Preference
+            android:icon="@drawable/flash"
+            android:key="active_wakeup"
+            android:summary="@string/pref_doze_summary"
+            android:title="@string/pref_doze" />
+
+    </PreferenceCategory>
+
+</PreferenceScreen>
diff --git a/RazerParts/src/com/razer/parts/BootReceiver.java b/RazerParts/src/com/razer/parts/BootReceiver.java
new file mode 100755
index 0000000..4c16ef3
--- /dev/null
+++ b/RazerParts/src/com/razer/parts/BootReceiver.java
@@ -0,0 +1,79 @@
+/*
+ * Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ */
+
+package com.razer.parts;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.os.SystemProperties;
+import android.os.RemoteException;
+import android.provider.Settings;
+import android.view.IWindowManager;
+import android.view.WindowManagerGlobal;
+
+import static com.razer.parts.Constants.*;
+import com.razer.parts.ShellUtils;
+import com.razer.parts.ShellUtils.CommandResult;
+import com.razer.parts.SharedPreferenceUtil;
+import com.razer.parts.ChromaManager;
+import com.razer.parts.R;
+
+public class BootReceiver extends BroadcastReceiver {
+
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        if (context == null) {
+            return;
+        }
+
+        SharedPreferenceUtil spfu = SharedPreferenceUtil.getInstance();
+        String mode = (String) spfu.get(context, CHROMA_MODE,
+                "color");
+        String color = (String) spfu.get(context, CHROMA_COLOR,
+                "#00FF00");
+        String brightness = (String) spfu.get(context, CHROMA_BRIGHTNESS,
+                "200");
+        String resolution = (String) spfu.get(context, SCREEN_RESOLUTION,
+                "1440");
+        String refreshRate = (String) spfu.get(context, SCREEN_REFRESH_RATE,
+                "120");
+        boolean chromaEnabled = (boolean) spfu.get(context, CHROMA_SWITCH,
+                false);
+
+        if(resolution.equals("1440")) {
+            ShellUtils.execCommand("wm density 480", false);
+            ShellUtils.execCommand("wm size 1440x2560", false);
+        } else {
+            ShellUtils.execCommand("wm density 360", false);
+            ShellUtils.execCommand("wm size 1080x1920", false);
+        }
+
+        int parseInt = Integer.parseInt(refreshRate);
+        IWindowManager windowManagerService = WindowManagerGlobal.getWindowManagerService();
+        if (windowManagerService != null) {
+            try {
+                windowManagerService.setDisplayRefreshRate(0, parseInt);
+            } catch(RemoteException e) {
+                e.printStackTrace();
+            }
+        }
+
+        if(chromaEnabled) {
+            ChromaManager tempManager = new ChromaManager();
+            tempManager.systemReady();
+            tempManager.loadMcuWithParams(context);
+        }
+    }
+}
diff --git a/RazerParts/src/com/razer/parts/ChromaActivity.java b/RazerParts/src/com/razer/parts/ChromaActivity.java
new file mode 100755
index 0000000..3c870f8
--- /dev/null
+++ b/RazerParts/src/com/razer/parts/ChromaActivity.java
@@ -0,0 +1,46 @@
+/*
+ * Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ */
+
+package com.razer.parts;
+
+import android.app.Activity;
+import android.app.Fragment;
+import android.os.Bundle;
+import android.view.MenuItem;
+
+public class ChromaActivity extends Activity {
+
+    @Override
+    protected void onCreate(Bundle bundle) {
+        super.onCreate(bundle);
+
+        getActionBar().setDisplayHomeAsUpEnabled(true);
+
+        Fragment fragment = getFragmentManager().findFragmentById(android.R.id.content);
+        ChromaFragment chromaFragment;
+        if (fragment == null) {
+            chromaFragment = new ChromaFragment();
+            getFragmentManager().beginTransaction().add(android.R.id.content, chromaFragment).commit();
+        }
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        if (item.getItemId() == android.R.id.home) {
+            finish();
+            return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+}
\ No newline at end of file
diff --git a/RazerParts/src/com/razer/parts/ChromaFragment.java b/RazerParts/src/com/razer/parts/ChromaFragment.java
new file mode 100755
index 0000000..8664de9
--- /dev/null
+++ b/RazerParts/src/com/razer/parts/ChromaFragment.java
@@ -0,0 +1,119 @@
+/*
+ * Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ */
+
+package com.razer.parts;
+
+import android.app.AlertDialog;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.SystemProperties;
+import android.provider.Settings;
+import android.telephony.TelephonyManager;
+import android.view.IWindowManager;
+import android.view.WindowManagerGlobal;
+import androidx.preference.Preference;
+import androidx.preference.PreferenceCategory;
+import androidx.preference.PreferenceFragment;
+import androidx.preference.SwitchPreference;
+import androidx.preference.EditTextPreference;
+import androidx.preference.ListPreference;
+
+import static com.razer.parts.Constants.*;
+import com.razer.parts.ShellUtils;
+import com.razer.parts.ShellUtils.CommandResult;
+import com.razer.parts.SharedPreferenceUtil;
+import com.razer.parts.ChromaManager;
+import com.razer.parts.R;
+
+public class ChromaFragment extends PreferenceFragment implements Preference.OnPreferenceChangeListener {
+    private SwitchPreference mEnabledSwitch;
+
+    private ListPreference mModePref;
+    private EditTextPreference mColorPref;
+    private EditTextPreference mBrightnessPref;
+
+    private ChromaManager mManager;
+
+    @Override
+    public void onCreatePreferences(Bundle bundle, String key) {
+        addPreferencesFromResource(R.xml.chroma_settings);
+        findPreferences();
+        bindListeners();
+        updateSummary();
+        mManager = new ChromaManager();
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object o) {
+        if(preference.getKey().equals(CHROMA_SWITCH)) {
+            boolean enabled = (boolean) o;
+            if(enabled) {
+                mManager.systemReady();
+            } else {
+                mManager.suspendThs();
+            }
+            return true;
+        }
+        SharedPreferenceUtil spfu = SharedPreferenceUtil.getInstance();
+                    spfu.put(getContext(), preference.getKey(), (String) o);
+        updateSummary();
+        mManager.loadMcuWithParams(preference.getContext());
+        return true;
+    }
+
+    private void findPreferences() {
+        mEnabledSwitch = findPreference(CHROMA_SWITCH);
+        mModePref = findPreference(CHROMA_MODE);
+        mColorPref = findPreference(CHROMA_COLOR);
+        mBrightnessPref = findPreference(CHROMA_BRIGHTNESS);
+    }
+
+    private void bindListeners() {
+        mEnabledSwitch.setOnPreferenceChangeListener(this);
+        mModePref.setOnPreferenceChangeListener(this);
+        mColorPref.setOnPreferenceChangeListener(this);
+        mBrightnessPref.setOnPreferenceChangeListener(this);
+    }
+
+    private void updateSummary() {
+        updateModeSummary();
+        updateEditTextSummary();
+    }
+
+    private void updateModeSummary() {
+        SharedPreferenceUtil spfu = SharedPreferenceUtil.getInstance();
+        String mode = (String) spfu.get(getContext(), CHROMA_MODE,
+                "color");
+        String[] entryvalue = getContext().getResources().getStringArray(R.array.chroma_mode_values);
+        String[] entry = getContext().getResources().getStringArray(R.array.chroma_mode_entries);
+        for (int i = 0; i < entryvalue.length; i++) {
+            if (entryvalue[i].equals(mode)) {
+                mModePref.setSummary(entry[i]);
+            }
+        }
+    }
+
+    private void updateEditTextSummary() {
+        SharedPreferenceUtil spfu = SharedPreferenceUtil.getInstance();
+        String color = (String) spfu.get(getContext(), CHROMA_COLOR,
+                "#00FF00");
+        String brightness = (String) spfu.get(getContext(), CHROMA_BRIGHTNESS,
+                "200");
+        mColorPref.setSummary(color);
+        mBrightnessPref.setSummary(brightness);
+    }
+}
diff --git a/RazerParts/src/com/razer/parts/ChromaManager.java b/RazerParts/src/com/razer/parts/ChromaManager.java
new file mode 100755
index 0000000..6a07e33
--- /dev/null
+++ b/RazerParts/src/com/razer/parts/ChromaManager.java
@@ -0,0 +1,365 @@
+/*
+ * Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ */
+
+package com.razer.parts;
+
+import android.app.ActivityManager;
+import android.app.IActivityManager;
+import android.content.Context;
+import android.graphics.Color;
+import android.os.Binder;
+import android.os.RemoteException;
+import android.os.ServiceManager;
+import android.os.UserHandle;
+import android.util.Log;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+
+import static com.razer.parts.Constants.*;
+import com.razer.parts.ShellUtils;
+import com.razer.parts.ShellUtils.CommandResult;
+import com.razer.parts.SharedPreferenceUtil;
+import com.razer.parts.R;
+
+public class ChromaManager {
+    private static final String BREATHING_START_1 = "03";
+    private static final String BREATHING_START_2 = "20";
+    private static final String BREATHING_START_3 = "34";
+    private static final boolean DEBUG = false;
+    private static final int DEFAULT_BRIGHTNESS = 255;
+    private static final int NUM_LEDS = 9;
+    private static final String PROGRAM_BREATHING = "01C00015002A9C000DFF7E002E009000910484600400BF87BF87BF0502005A00E004E008920484600400BF91BF91BF0F02007E007E007E006000E004E008A0059C010DFF7E002E009000910484600400BF87BF87BF05E080920484600400BF8EBF8EBF0CE080A0059C020DFF7E002E009000910484600400BF87BF87BF05E080920484600400BF8EBF8EBF0CE080A005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
+    private static final String PROGRAM_SPECTRUM = "01C00015002A9C0026FF4A00A0074C537E006C00E00855103C00A18963103400A30C57164800590D5000E00437BC4A00E1007400A19648006C0E5A00429EA00400009C0123FF34124C004018A00863205A00610A480046614468E080690848007400A18FE0087400A1124A104400E00245874E0055206000A00600009C0226FF40FFE0802BF14C00670E5800E10016DF4A0050206C00A00300000000000000000000000000000000000000000000000000000000000000000000000000000000";
+    private static final int RAZER_GREEN = Color.GREEN;
+    private static final String SPECTRUM_START_1 = "03";
+    private static final String SPECTRUM_START_2 = "21";
+    private static final String SPECTRUM_START_3 = "3E";
+    private static final String PROGRAM_WAVE_LTR = "01FF01C00001004000020004008000080010010000209C000DFF9C010CFFE004E0089C029C84442312DC9D8011FF9D8020FF9D8011FF9D80442312DC9D8011FF9D80A008E0809C059C8709FF442312DC9D8011FF9D8020FF9D8011FF9D80442312DC9D8011FF9D80A004E0809C089C8A11FF442312DC9D8011FF9D8020FF9D8011FF9D80442312DC9D8011FF9D80A004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
+    private static final String PROGRAM_WAVE_RTL = "01FF01C00001004000020004008000080010010000209C000DFF9C010CFFE004E0089C089C8A442312DC9D8011FF9D8020FF9D8011FF9D80442312DC9D8011FF9D80A008E0809C059C8709FF442312DC9D8011FF9D8020FF9D8011FF9D80442312DC9D8011FF9D80A004E0809C029C8411FF442312DC9D8011FF9D8020FF9D8011FF9D80442312DC9D8011FF9D80A004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
+    private static final String WAVE_START_1 = "0B";
+    private static final String WAVE_START_2 = "22";
+    private static final String WAVE_START_3 = "35";
+    static final String TAG = "Ths";
+    private static final String THS_CHANNEL_SPEC = "lp5523:channel";
+    private static final String THS_DEVICE_DIR = "/sys/class/leds/lp5523:channel0/device";
+    private static final String THS_LEDS_DIR = "/sys/class/leds";
+    private static final String[] THS_NODE_CHANNELS = new String[9];
+    private static final String[] THS_NODE_CHANNELS_BRIGHTNESS = new String[9];
+    private static final String[] THS_NODE_CHANNELS_CURRENTS = new String[9];
+    private static final String THS_NODE_ENGINE_1_MODE = "/sys/class/leds/lp5523:channel0/device/engine1_mode";
+    private static final String THS_NODE_ENGINE_2_MODE = "/sys/class/leds/lp5523:channel0/device/engine2_mode";
+    private static final String THS_NODE_ENGINE_3_MODE = "/sys/class/leds/lp5523:channel0/device/engine3_mode";
+    private static final String THS_NODE_MASTER_FADER_1 = "/sys/class/leds/lp5523:channel0/device/master_fader1";
+    private static final String THS_NODE_MASTER_FADER_2 = "/sys/class/leds/lp5523:channel0/device/master_fader2";
+    private static final String THS_NODE_MASTER_FADER_3 = "/sys/class/leds/lp5523:channel0/device/master_fader3";
+    private static final String THS_NODE_MASTER_FADER_LEDS = "/sys/class/leds/lp5523:channel0/device/master_fader_leds";
+    private static final String THS_NODE_MEMORY = "/sys/class/leds/lp5523:channel0/device/memory";
+    private static final String THS_NODE_PROG_1_START = "/sys/class/leds/lp5523:channel0/device/prog_1_start";
+    private static final String THS_NODE_PROG_2_START = "/sys/class/leds/lp5523:channel0/device/prog_2_start";
+    private static final String THS_NODE_PROG_3_START = "/sys/class/leds/lp5523:channel0/device/prog_3_start";
+    private static final String THS_NODE_RUN_ENGINE = "/sys/class/leds/lp5523:channel0/device/run_engine";
+    private static final String THS_NODE_SUSPEND = "/sys/class/leds/lp5523:channel0/device/force_suspend";
+    private static boolean mHardwareSuspended = false;
+    private final Object mLock = new Object();
+
+    static {
+        for (int i = 0; i < 9; i++) {
+            String[] strArr = THS_NODE_CHANNELS;
+            strArr[i] = "/sys/class/leds/lp5523:channel" + i;
+            String[] strArr2 = THS_NODE_CHANNELS_CURRENTS;
+            strArr2[i] = THS_NODE_CHANNELS[i] + "/led_current";
+            String[] strArr3 = THS_NODE_CHANNELS_BRIGHTNESS;
+            strArr3[i] = THS_NODE_CHANNELS[i] + "/brightness";
+        }
+    }
+
+    public void loadMcuWithParams(Context context) {
+        SharedPreferenceUtil spfu = SharedPreferenceUtil.getInstance();
+        String mode = (String) spfu.get(context, Constants.CHROMA_MODE,
+                "color");
+        String color = (String) spfu.get(context, Constants.CHROMA_COLOR,
+                "#00FF00");
+        String brightness = (String) spfu.get(context, Constants.CHROMA_BRIGHTNESS,
+                "200");
+
+        switch(mode) {
+            case "color":
+                runThsEffect(1, Color.parseColor(color));
+                break;
+            case "breath":
+                runThsEffect(2, 0);
+                break;
+            case "spectrum":
+                runThsEffect(3, 0);
+                break;
+            case "wave_ltr":
+                runThsEffect(4, 0);
+                break;
+            case "wave_rtl":
+                runThsEffect(5, 0);
+                break;
+        }
+
+        setBrightness(Integer.parseInt(brightness));
+    }
+
+    public void systemReady() {
+        synchronized (this) {
+            try {
+                writeToNode(THS_NODE_SUSPEND, "0");
+                initLED();
+            } catch (IOException e) {
+                Log.wtf(TAG, "Error initialising THS nodes", e);
+            }
+        }
+    }
+
+    private void initLED() throws IOException {
+        for (int i = 0; i < 9; i++) {
+            writeToNode(THS_NODE_CHANNELS_CURRENTS[i], "255");
+        }
+        writeToNode(THS_NODE_MASTER_FADER_LEDS, "111111111");
+        setBrightness(255);
+    }
+
+    public void runThsEffect(int i, int i2) {
+        runChromaProgram(i, i2);
+    }
+
+    public void runThsProgram(String str, String str2, String str3, String str4) {
+        if (str.isEmpty() || str2.isEmpty() || str3.isEmpty() || str4.isEmpty()) {
+            throw new IllegalArgumentException();
+        }
+        runUnknownProgram(str, str2, str3, str4);
+    }
+
+    public void previewColor(int i) {
+        runProgramForColor(i);
+    }
+
+    public void setBrightness(int i) {
+        if (i < 5) {
+            i = 5;
+        } else if (i > 255) {
+            i = 255;
+        }
+        applyBrightness(i);
+    }
+
+    public void suspendThs() {
+        runStopProgram();
+    }
+
+    public void setMasterFader1(int i) {
+        applyBrightnessForFader(THS_NODE_MASTER_FADER_1, i);
+    }
+
+    public void setMasterFader2(int i) {
+        applyBrightnessForFader(THS_NODE_MASTER_FADER_2, i);
+    }
+
+    public void setMasterFader3(int i) {
+        applyBrightnessForFader(THS_NODE_MASTER_FADER_3, i);
+    }
+
+    public void setMasterFaderLEDs(String str) {
+        setMasterFader(str);
+    }
+
+    public boolean getHardwareSuspend() {
+        boolean z;
+        synchronized (this.mLock) {
+            z = this.mHardwareSuspended;
+        }
+        return z;
+    }
+
+    public void setHardwareSuspend(boolean z) {
+        synchronized (this.mLock) {
+            try {
+                writeToNode(THS_NODE_SUSPEND, z ? "1" : "0");
+                if (!z) {
+                    initLED();
+                }
+                this.mHardwareSuspended = z;
+            } catch (IOException e) {
+                StringBuilder sb = new StringBuilder();
+                sb.append("Failed to ");
+                sb.append(z ? "suspend" : "resume");
+                sb.append(" THS hardware!");
+                Log.e(TAG, sb.toString(), e);
+            }
+        }
+    }
+
+    private void runChromaProgram(int i, int i2) {
+        synchronized (this.mLock) {
+            switch (i) {
+                case 1:
+                    runProgramForColor(i2);
+                    break;
+                case 2:
+                    try {
+                        runProgram(PROGRAM_BREATHING.getBytes(), "03", BREATHING_START_2, BREATHING_START_3);
+                    } catch (IOException e) {
+                        Log.e(TAG, "Error applying chroma effect", e);
+                        break;
+                    }
+                    break;
+                case 3:
+                    try {
+                        runProgram(PROGRAM_SPECTRUM.getBytes(), "03", SPECTRUM_START_2, SPECTRUM_START_3);
+                        break;
+                    } catch (IOException e) {
+                        Log.e(TAG, "Error applying chroma effect", e);
+                        break;
+                    }
+                case 4:
+                    try {
+                        runProgram(PROGRAM_WAVE_LTR.getBytes(), WAVE_START_1, WAVE_START_2, WAVE_START_3);
+                        break;
+                    } catch (IOException e) {
+                        Log.e(TAG, "Error applying chroma effect", e);
+                        break;
+                    }
+                case 5:
+                    try {
+                        runProgram(PROGRAM_WAVE_RTL.getBytes(), WAVE_START_1, WAVE_START_2, WAVE_START_3);
+                        break;
+                    } catch (IOException e) {
+                        Log.e(TAG, "Error applying chroma effect", e);
+                        break;
+                    }
+            }
+        }
+    }
+
+    private void runUnknownProgram(String str, String str2, String str3, String str4) {
+        synchronized (this.mLock) {
+            try {
+                writeToNode(THS_NODE_MEMORY, str.getBytes());
+                writeToNode(THS_NODE_PROG_1_START, str2);
+                writeToNode(THS_NODE_PROG_2_START, str3);
+                writeToNode(THS_NODE_PROG_3_START, str4);
+                writeToNode(THS_NODE_RUN_ENGINE, "1");
+            } catch (IOException e) {
+                Log.e(TAG, "Error attempting to apply program: " + str, e);
+            }
+        }
+    }
+
+    private void runProgramForColor(int i) {
+        runSuspendProgram();
+        try {
+            int red = Color.red(i);
+            int green = Color.green(i);
+            int blue = Color.blue(i);
+            int[] iArr = {green, blue, green, blue, green, blue, red, red, red};
+            for (int i2 = 0; i2 < 9; i2++) {
+                String str = THS_NODE_CHANNELS_BRIGHTNESS[i2];
+                writeToNode(str, iArr[i2] + "");
+            }
+        } catch (IOException e) {
+            Log.e(TAG, "Error applying color: " + i, e);
+        }
+    }
+
+    private void runSuspendProgram() {
+        synchronized (this.mLock) {
+            try {
+                writeToNode(THS_NODE_ENGINE_1_MODE, "disabled");
+                writeToNode(THS_NODE_ENGINE_2_MODE, "disabled");
+                writeToNode(THS_NODE_ENGINE_3_MODE, "disabled");
+            } catch (IOException e) {
+                Log.e(TAG, "Error suspending LEDs", e);
+            }
+        }
+    }
+
+    private void runStopProgram() {
+        synchronized (this.mLock) {
+            try {
+                readMemory();
+                writeToNode(THS_NODE_MASTER_FADER_1, "0");
+            } catch (IOException e) {
+                Log.e(TAG, "Error stopping program", e);
+            }
+        }
+    }
+
+    private void applyBrightness(int i) {
+        synchronized (this.mLock) {
+            try {
+                writeToNode(THS_NODE_MASTER_FADER_1, i + "");
+            } catch (IOException e) {
+                Log.e(TAG, "Error applying brightness", e);
+            }
+        }
+    }
+
+    private void applyBrightnessForFader(String str, int i) {
+        synchronized (this.mLock) {
+            try {
+                writeToNode(str, i + "");
+            } catch (IOException e) {
+                Log.e(TAG, "error applying brightness " + i + "to fader: " + str, e);
+            }
+        }
+    }
+
+    private void setMasterFader(String str) {
+        synchronized (this.mLock) {
+            try {
+                writeToNode(THS_NODE_MASTER_FADER_LEDS, str);
+            } catch (IOException e) {
+                Log.e(TAG, "Error mapping fader: " + str, e);
+            }
+        }
+    }
+
+    private void runProgram(byte[] bArr, String str, String str2, String str3) throws IOException {
+        writeToNode(THS_NODE_MEMORY, bArr);
+        writeToNode(THS_NODE_PROG_1_START, str);
+        writeToNode(THS_NODE_PROG_2_START, str2);
+        writeToNode(THS_NODE_PROG_3_START, str3);
+        writeToNode(THS_NODE_RUN_ENGINE, "1");
+    }
+
+    private void writeToNode(String str, String str2) throws IOException {
+        writeToNode(str, str2.getBytes());
+    }
+
+    private void writeToNode(String str, byte[] bArr) throws IOException {
+        FileOutputStream fileOutputStream = new FileOutputStream(new File(str));
+        fileOutputStream.write(bArr);
+        fileOutputStream.flush();
+        fileOutputStream.close();
+    }
+
+    private String readMemory() {
+        try {
+            byte[] bArr = new byte[512];
+            int read = new FileInputStream(new File(THS_NODE_MEMORY)).read(bArr);
+            if (read == bArr.length) {
+                Log.e(TAG, "Too much data");
+            }
+            return new String(bArr, 0, read);
+        } catch (IOException e) {
+            Log.wtf(TAG, "Unexpected IOException reading memory", e);
+            return null;
+        }
+    }
+}
diff --git a/RazerParts/src/com/razer/parts/Constants.java b/RazerParts/src/com/razer/parts/Constants.java
new file mode 100755
index 0000000..fc4f89c
--- /dev/null
+++ b/RazerParts/src/com/razer/parts/Constants.java
@@ -0,0 +1,32 @@
+/*
+ * Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ */
+
+package com.razer.parts;
+
+public class Constants {
+
+    public static final String SCREEN_RESOLUTION = "screen_resolution";
+    public static final String SCREEN_REFRESH_RATE = "screen_refresh_rate";
+
+    public static final String CHROMA = "chroma";
+
+    public static final String DOLBY_ATMOS = "dolby_atmos";
+    public static final String ACTIVE_WAKE = "active_wakeup";
+
+    public static final String CHROMA_SWITCH = "chroma_switch";
+
+    public static final String CHROMA_MODE = "chroma_mode";
+    public static final String CHROMA_COLOR = "chroma_color";
+    public static final String CHROMA_BRIGHTNESS = "chroma_brightness";
+}
diff --git a/RazerParts/src/com/razer/parts/DeviceSettingsActivity.java b/RazerParts/src/com/razer/parts/DeviceSettingsActivity.java
new file mode 100755
index 0000000..de87f29
--- /dev/null
+++ b/RazerParts/src/com/razer/parts/DeviceSettingsActivity.java
@@ -0,0 +1,46 @@
+/*
+ * Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ */
+
+package com.razer.parts;
+
+import android.app.Activity;
+import android.app.Fragment;
+import android.os.Bundle;
+import android.view.MenuItem;
+
+public class DeviceSettingsActivity extends Activity {
+
+    @Override
+    protected void onCreate(Bundle bundle) {
+        super.onCreate(bundle);
+
+        getActionBar().setDisplayHomeAsUpEnabled(true);
+
+        Fragment fragment = getFragmentManager().findFragmentById(android.R.id.content);
+        DeviceSettingsFragment deviceSettingsFragment;
+        if (fragment == null) {
+            deviceSettingsFragment = new DeviceSettingsFragment();
+            getFragmentManager().beginTransaction().add(android.R.id.content, deviceSettingsFragment).commit();
+        }
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        if (item.getItemId() == android.R.id.home) {
+            finish();
+            return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+}
diff --git a/RazerParts/src/com/razer/parts/DeviceSettingsFragment.java b/RazerParts/src/com/razer/parts/DeviceSettingsFragment.java
new file mode 100755
index 0000000..90ddf5e
--- /dev/null
+++ b/RazerParts/src/com/razer/parts/DeviceSettingsFragment.java
@@ -0,0 +1,166 @@
+/*
+ * Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ */
+
+package com.razer.parts;
+
+import android.app.AlertDialog;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.SystemProperties;
+import android.os.RemoteException;
+import android.provider.Settings;
+import android.telephony.TelephonyManager;
+import android.util.Log;
+import android.view.IWindowManager;
+import android.view.WindowManagerGlobal;
+import androidx.preference.Preference;
+import androidx.preference.PreferenceCategory;
+import androidx.preference.PreferenceFragment;
+import androidx.preference.SwitchPreference;
+import androidx.preference.ListPreference;
+import static android.provider.Settings.System.MIN_REFRESH_RATE;
+import static android.provider.Settings.System.PEAK_REFRESH_RATE;
+import static android.provider.Settings.System.PREFERRED_REFRESH_RATE;
+
+import static com.razer.parts.Constants.*;
+import com.razer.parts.ShellUtils;
+import com.razer.parts.ShellUtils.CommandResult;
+import com.razer.parts.SharedPreferenceUtil;
+import com.razer.parts.ChromaManager;
+import com.razer.parts.R;
+
+public class DeviceSettingsFragment extends PreferenceFragment implements Preference.OnPreferenceChangeListener, Preference.OnPreferenceClickListener {
+    private ListPreference mResolutionPref;
+    private ListPreference mRefreshRatePref;
+
+    private Preference mChromaPref;
+    private Preference mDolbyAtmosPref;
+    private Preference mActiveWakeupPref;
+
+    public String TAG = "RazerParts";
+
+    @Override
+    public void onCreatePreferences(Bundle bundle, String key) {
+        addPreferencesFromResource(R.xml.device_settings);
+        findPreferences();
+        bindListeners();
+        updateSummary();
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object o) {
+        switch (preference.getKey()) {
+            case SCREEN_RESOLUTION:
+                String resolution = (String) o;
+                if(o.equals("1440")) {
+                    ShellUtils.execCommand("wm density 480", false);
+                    ShellUtils.execCommand("wm size 1440x2560", false);
+                } else {
+                    ShellUtils.execCommand("wm density 360", false);
+                    ShellUtils.execCommand("wm size 1080x1920", false);
+                }
+                break;
+            case SCREEN_REFRESH_RATE:
+                int parseInt = Integer.parseInt((String) o);
+                Log.e(TAG, "To set rate: "+parseInt);
+                IWindowManager windowManagerService = WindowManagerGlobal.getWindowManagerService();
+                if (windowManagerService == null) {
+                    Log.e(TAG, "fps interface failure");
+                    return false;
+                }
+                try {
+                    windowManagerService.setDisplayRefreshRate(0, parseInt);
+                } catch(RemoteException e) {
+                    Log.e(TAG, "Error settings refresh rate", e);
+                }
+                Settings.System.putInt(getContext().getContentResolver(), MIN_REFRESH_RATE, parseInt);
+	            Settings.System.putInt(getContext().getContentResolver(), PEAK_REFRESH_RATE, parseInt);
+                Settings.System.putFloat(getContext().getContentResolver(), PREFERRED_REFRESH_RATE,
+                Float.valueOf((String) o));
+                break;
+        }
+        SharedPreferenceUtil spfu = SharedPreferenceUtil.getInstance();
+                    spfu.put(getContext(), preference.getKey(), (String) o);
+        updateSummary();
+        return true;
+    }
+
+    @Override
+    public boolean onPreferenceClick(Preference preference) {
+        switch (preference.getKey()) {
+            case CHROMA:
+                preference.getContext().startActivity(new Intent(getActivity(), ChromaActivity.class));
+                break;
+            case DOLBY_ATMOS:
+
+                break;
+            case ACTIVE_WAKE:
+                preference.getContext().startActivity(new Intent()
+                    .setClassName("org.lineageos.settings",
+                     "org.lineageos.settings.doze.DozeSettingsActivity"));
+                break;
+        }
+        return true;
+    }
+
+    private void findPreferences() {
+        mResolutionPref = findPreference(SCREEN_RESOLUTION);
+        mRefreshRatePref = findPreference(SCREEN_REFRESH_RATE);
+        mChromaPref = findPreference(CHROMA);
+        mDolbyAtmosPref = findPreference(DOLBY_ATMOS);
+        mActiveWakeupPref = findPreference(ACTIVE_WAKE);
+    }
+
+    private void bindListeners() {
+        mResolutionPref.setOnPreferenceChangeListener(this);
+        mRefreshRatePref.setOnPreferenceChangeListener(this);
+        mChromaPref.setOnPreferenceClickListener(this);
+        mDolbyAtmosPref.setOnPreferenceClickListener(this);
+        mActiveWakeupPref.setOnPreferenceClickListener(this);
+    }
+
+    private void updateSummary() {
+        updateResolutionSummary();
+        updateRefreshRateSummary();
+    }
+
+    private void updateResolutionSummary() {
+        SharedPreferenceUtil spfu = SharedPreferenceUtil.getInstance();
+        String resolution = (String) spfu.get(getContext(), SCREEN_RESOLUTION,
+                "1440");
+        String[] entryvalue = getContext().getResources().getStringArray(R.array.resolution_values);
+        String[] entry = getContext().getResources().getStringArray(R.array.resolution_entries);
+        for (int i = 0; i < entryvalue.length; i++) {
+            if (entryvalue[i].equals(resolution)) {
+                mResolutionPref.setSummary(entry[i]);
+            }
+        }
+    }
+
+    private void updateRefreshRateSummary() {
+        SharedPreferenceUtil spfu = SharedPreferenceUtil.getInstance();
+        String refreshRate = (String) spfu.get(getContext(), SCREEN_REFRESH_RATE,
+                "120");
+        String[] entryvalue = getContext().getResources().getStringArray(R.array.refresh_rate_values);
+        String[] entry = getContext().getResources().getStringArray(R.array.refresh_rate_entries);
+        for (int i = 0; i < entryvalue.length; i++) {
+            if (entryvalue[i].equals(refreshRate)) {
+                mRefreshRatePref.setSummary(entry[i]);
+            }
+        }
+    }
+}
diff --git a/RazerParts/src/com/razer/parts/SharedPreferenceUtil.java b/RazerParts/src/com/razer/parts/SharedPreferenceUtil.java
new file mode 100644
index 0000000..6a747e4
--- /dev/null
+++ b/RazerParts/src/com/razer/parts/SharedPreferenceUtil.java
@@ -0,0 +1,61 @@
+package com.razer.parts;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+
+import androidx.annotation.Nullable;
+
+public final class SharedPreferenceUtil {
+
+    private static final String FILE_NAME = "io.alcatraz.audiohq_preferences"; //文件名
+    private static SharedPreferenceUtil mInstance;
+
+    public static SharedPreferenceUtil getInstance(){
+        if(mInstance == null){
+            synchronized (SharedPreferenceUtil.class){
+                if(mInstance == null){
+                    mInstance = new SharedPreferenceUtil();
+                }
+            }
+        }
+        return mInstance;
+    }
+
+    public boolean put(Context context, String key, Object value){
+        //判断类型
+        String type = value.getClass().getSimpleName();
+        SharedPreferences sharedPreferences = context.getSharedPreferences(FILE_NAME, Context.MODE_PRIVATE);
+        SharedPreferences.Editor editor = sharedPreferences.edit();
+        if("Integer".equals(type)){
+            editor.putInt(key,(Integer)value);
+        }else if ("Boolean".equals(type)){
+            editor.putBoolean(key,(Boolean)value);
+        }else if ("Float".equals(type)){
+            editor.putFloat(key,(Float)value);
+        }else if ("Long".equals(type)){
+            editor.putLong(key,(Long)value);
+        }else if ("String".equals(type)){
+            editor.putString(key,(String) value);
+        }
+        editor.apply();
+        return false;
+    }
+
+    @Nullable
+    public Object get(Context context, String key, Object defValue){
+        SharedPreferences sharedPreferences = context.getSharedPreferences(FILE_NAME, Context.MODE_PRIVATE);
+        String type = defValue.getClass().getSimpleName();
+        if("Integer".equals(type)){
+            return sharedPreferences.getInt(key,(Integer)defValue);
+        }else if ("Boolean".equals(type)){
+            return sharedPreferences.getBoolean(key,(Boolean)defValue);
+        }else if ("Float".equals(type)){
+            return sharedPreferences.getFloat(key,(Float)defValue);
+        }else if ("Long".equals(type)){
+            return sharedPreferences.getLong(key,(Long)defValue);
+        }else if ("String".equals(type)){
+            return sharedPreferences.getString(key,(String) defValue);
+        }
+        return null;
+    }
+}
diff --git a/RazerParts/src/com/razer/parts/ShellUtils.java b/RazerParts/src/com/razer/parts/ShellUtils.java
new file mode 100755
index 0000000..8d4ad04
--- /dev/null
+++ b/RazerParts/src/com/razer/parts/ShellUtils.java
@@ -0,0 +1,148 @@
+/*
+ * Copyright (c) 2021, Alcatraz323 <alcatraz32323@gmail.com>
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to deal
+ * in the Software without restriction, including without limitation the rights
+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ * copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ */
+package com.razer.parts;
+
+import java.io.BufferedReader;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.util.List;
+
+public class ShellUtils {
+    public static final String ERR_EMPTY_COMMAND = "Command can't be null";
+
+    /**
+     * check whether has root permission
+     */
+    public static boolean hasRootPermission() {
+        return execCommand("echo root", true, false).result == 0;
+    }
+
+
+    public static CommandResult execCommand(String command, boolean isRoot) {
+        return execCommand(new String[]{command}, isRoot, true);
+    }
+
+    public static CommandResult execCommand(String command, boolean isRoot, boolean isNeedResultMsg) {
+
+        return execCommand(new String[]{command}, isRoot, isNeedResultMsg);
+    }
+
+    public static CommandResult execCommand(List<String> commands, boolean isRoot, boolean isNeedResultMsg) {
+        return execCommand(commands == null ? null : commands.toArray(new String[]{}), isRoot, isNeedResultMsg);
+    }
+
+    /**
+     * execute shell commands
+     * {@link CommandResult#result} is -1, there maybe some excepiton.
+     *
+     * @param commands     command array
+     * @param isRoot       whether need to run with root
+     * @param needResponse whether need result msg
+     */
+    public static CommandResult execCommand(String[] commands, boolean isRoot, boolean needResponse) {
+
+        int result = -1;
+        if (commands == null || commands.length == 0) {
+            return new CommandResult(result, null, ERR_EMPTY_COMMAND);
+        }
+
+        Process process = null;
+        BufferedReader successResult = null;
+        BufferedReader errorResult = null;
+        StringBuilder successMsg = null;
+        StringBuilder errorMsg = null;
+
+        DataOutputStream os = null;
+        try {
+            process = Runtime.getRuntime().exec(isRoot ? COMMAND_SU : COMMAND_SH);
+            os = new DataOutputStream(process.getOutputStream());
+            for (String command : commands) {
+                if (command == null) {
+                    continue;
+                }
+                // donnot use os.writeBytes(commmand), avoid chinese charset error
+                os.write(command.getBytes());
+                os.writeBytes(COMMAND_LINE_END);
+                os.flush();
+            }
+            os.writeBytes(COMMAND_EXIT);
+            os.flush();
+
+            result = process.waitFor();
+            if (needResponse) {
+                successMsg = new StringBuilder();
+                errorMsg = new StringBuilder();
+                successResult = new BufferedReader(new InputStreamReader(process.getInputStream()));
+                errorResult = new BufferedReader(new InputStreamReader(process.getErrorStream()));
+                String s;
+                while ((s = successResult.readLine()) != null) {
+                    successMsg.append(s).append("\n");
+                }
+                while ((s = errorResult.readLine()) != null) {
+                    errorMsg.append(s);
+                }
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            try {
+                if (errorResult != null) {
+                    errorResult.close();
+                }
+                if (successResult != null) {
+                    successResult.close();
+                }
+                if (os != null) {
+                    os.close();
+                }
+            } catch (IOException e) {
+                e.printStackTrace();
+            } finally {
+                if (process != null) {
+                    process.destroy();
+                }
+            }
+
+        }
+        return new CommandResult(result, successMsg == null ? "" : successMsg.toString(), errorMsg == null ? ""
+                : errorMsg.toString());
+    }
+
+
+    public static class CommandResult {
+
+        public int result;
+        public String responseMsg;
+        public String errorMsg;
+
+        public CommandResult(int result) {
+            this.result = result;
+        }
+
+        public CommandResult(int result, String responseMsg, String errorMsg) {
+            this.result = result;
+            this.responseMsg = responseMsg;
+            this.errorMsg = errorMsg;
+        }
+    }
+
+    public static final String COMMAND_SU = "su";
+    public static final String COMMAND_SH = "sh";
+    public static final String COMMAND_EXIT = "exit\n";
+    public static final String COMMAND_LINE_END = "\n";
+
+}
diff --git a/device.mk b/device.mk
index 4ba7c32..761c2b8 100644
--- a/device.mk
+++ b/device.mk
@@ -195,7 +195,8 @@ PRODUCT_PACKAGES += \
 
 # Device-specific settings
 PRODUCT_PACKAGES += \
-    AuraParts
+    AuraParts \
+    RazerParts 
 
 # Display
 PRODUCT_PACKAGES += \
diff --git a/overlay/frameworks/base/core/res/res/values/config.xml b/overlay/frameworks/base/core/res/res/values/config.xml
index fd7f314..e4081fc 100644
--- a/overlay/frameworks/base/core/res/res/values/config.xml
+++ b/overlay/frameworks/base/core/res/res/values/config.xml
@@ -921,4 +921,7 @@
     <string-array name="config_biometric_sensors" translatable="false" >
         <item>0:2:15</item> <!-- ID0:Fingerprint:Strong -->
     </string-array>
+
+    <!-- True if the device has a kernel high refresh rate only screen, then use Api in IWindowManager -->
+    <bool name="config_useLegacyRefreshRateControl">true</bool>
 </resources>
diff --git a/sepolicy/vendor/system_app.te b/sepolicy/vendor/system_app.te
new file mode 100644
index 0000000..b1f775f
--- /dev/null
+++ b/sepolicy/vendor/system_app.te
@@ -0,0 +1,4 @@
+# system_app.te
+
+allow system_app sysfs_leds:dir { rw_dir_perms };
+allow system_app sysfs_leds:file { rw_file_perms };
-- 
2.34.0

